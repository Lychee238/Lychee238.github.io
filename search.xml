<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>C++的类</title>
      <link href="/2022/12/17/C-%E7%9A%84%E7%B1%BB/"/>
      <url>/2022/12/17/C-%E7%9A%84%E7%B1%BB/</url>
      
        <content type="html"><![CDATA[<h1>C++的类</h1><ul><li>成员</li><li>构造函数（explicit）</li><li>析构函数</li><li>初始化列表来初始化字段</li></ul><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//初始化内部成员，不需要像vector_init()函数一样需要赋值操作绑定</span></span><br><span class="line"><span class="built_in">Vector</span>(<span class="type">int</span> size)</span><br><span class="line">: sz&#123;size&#125;,</span><br><span class="line">  elem&#123;<span class="keyword">new</span> <span class="type">double</span>[sz]&#125;</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> Vector&#123;</span><br><span class="line">    <span class="type">size_t</span> sz;<span class="comment">//number of elements</span></span><br><span class="line">    <span class="type">double</span>* elem;<span class="comment">//pointer to elements</span></span><br><span class="line"><span class="keyword">public</span>:    </span><br><span class="line"><span class="built_in">Vector</span>(<span class="type">size_t</span> size)</span><br><span class="line">    :sz&#123;size&#125;,</span><br><span class="line">    elem&#123;<span class="keyword">new</span> <span class="type">double</span>[size]&#125;</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">Vector</span>(<span class="type">size_t</span> size, <span class="type">double</span>* element)</span><br><span class="line">    :sz&#123;size&#125;</span><br><span class="line">    elem&#123;element&#125;</span><br><span class="line">&#123;</span><br><span class="line">&#125;    </span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//定义操作符，当对象使用[]时则返回elem[i]</span></span><br><span class="line"><span class="type">double</span>&amp; <span class="keyword">operator</span>[](<span class="type">int</span> i)&#123;</span><br><span class="line">    <span class="keyword">return</span> elem[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">size_t</span> <span class="title">size</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> sz;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//析构函数（desturctor） 用于释放内存  类结束生命周期时调用</span></span><br><span class="line">~<span class="built_in">Vector</span>() &#123;&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">read_and_sum</span><span class="params">(<span class="type">int</span> s)</span></span>&#123;</span><br><span class="line">    <span class="function">Vector <span class="title">myVector</span><span class="params">(s)</span></span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i != s;++i)&#123;</span><br><span class="line">        cin&gt;&gt;myVector[i];<span class="comment">//上文定义的操作符</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">double</span> sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i != s;++i)&#123;</span><br><span class="line">        sum+=myVector[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="explicit-构造函数">Explicit 构造函数</h3><ul><li>解决隐式类型转换问题</li></ul><p>E.g.</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Explicit constructor</span></span><br><span class="line">Vector v1 = <span class="number">7</span>;<span class="comment">//OK:V1 has 7 elements</span></span><br></pre></td></tr></table></figure><p>显然，在这里得到的结果是生成一个有7个元素的v1（编译器做了隐式转换，将语句对应到构造函数）。但这个结果往往不是我们想要的结果。如果不想让构造函数进行隐式类型转换，可以在构造函数前面加上explicit关键字，防止进行隐式转换</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Vector</span>&#123;</span><br><span class="line">    <span class="keyword">public</span>:</span><br><span class="line">    <span class="function"><span class="keyword">explicit</span> <span class="title">Vector</span><span class="params">(<span class="type">int</span> s)</span></span>;<span class="comment">//no implicit conversion from int to Vector</span></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function">Vector <span class="title">v1</span><span class="params">(<span class="number">7</span>)</span></span>; <span class="comment">//OK:v1 has 7 elements</span></span><br><span class="line">Vector v2 = <span class="number">7</span><span class="comment">//error,no implicit conversion from int to Vector</span></span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C++基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>网页控制台绘画</title>
      <link href="/2022/12/08/F12%E7%BD%91%E9%A1%B5%E6%8E%A7%E5%88%B6%E5%8F%B0%E8%BE%93%E5%87%BA%E5%AD%97%E7%AC%A6%E4%B8%B2/"/>
      <url>/2022/12/08/F12%E7%BD%91%E9%A1%B5%E6%8E%A7%E5%88%B6%E5%8F%B0%E8%BE%93%E5%87%BA%E5%AD%97%E7%AC%A6%E4%B8%B2/</url>
      
        <content type="html"><![CDATA[<h1>F12网页控制台字符串绘画</h1><h3 id="起因">起因</h3><p>很久以前，在bilibili无意间按下F12,无意间发现了开发者留下的彩蛋，虽说这个东西比较鸡肋，但这何尝不是一种技术人的浪漫呢？心里便一直念想着自己画一个控制台，今天得到了实现，感谢<a href="https://hassanwong.top/">Harry’s Blog</a>提供的美化方案，转载略有修改</p><h3 id="实现">实现</h3><p>新建JS文件，代码模板如下，若想修改，可以学习一下JavaScript相关内容</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">if</span> (<span class="variable language_">window</span>.<span class="property">console</span>) &#123;</span><br><span class="line">  <span class="title class_">Function</span>.<span class="property"><span class="keyword">prototype</span></span>.<span class="property">makeMulti</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">let</span> l = <span class="keyword">new</span> <span class="title class_">String</span>(<span class="variable language_">this</span>);</span><br><span class="line">    l = l.<span class="title function_">substring</span>(l.<span class="title function_">indexOf</span>(<span class="string">&quot;/*&quot;</span>) + <span class="number">3</span>, l.<span class="title function_">lastIndexOf</span>(<span class="string">&quot;*/&quot;</span>));</span><br><span class="line">    <span class="keyword">return</span> l;</span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="keyword">let</span> string = <span class="keyword">function</span> (<span class="params"></span>) &#123;</span><br><span class="line">    <span class="comment">/*</span></span><br><span class="line"><span class="comment">字符画部分</span></span><br><span class="line"><span class="comment">    */</span></span><br><span class="line">  &#125;;</span><br><span class="line">  <span class="variable language_">console</span>.<span class="title function_">log</span>(string.<span class="title function_">makeMulti</span>());</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>这里同样给出大佬<a href="https://www.fomal.cc/">Fomalhaut</a>的console.js</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// // 控制台输出字符画</span></span><br><span class="line"><span class="comment">// if (window.console) &#123;</span></span><br><span class="line"><span class="comment">//     Function.prototype.makeMulti = function () &#123;</span></span><br><span class="line"><span class="comment">//         let l = new String(this);</span></span><br><span class="line"><span class="comment">//         l = l.substring(l.indexOf(&quot;/*&quot;) + 3, l.lastIndexOf(&quot;*/&quot;));</span></span><br><span class="line"><span class="comment">//         return l;</span></span><br><span class="line"><span class="comment">//     &#125;;</span></span><br><span class="line"><span class="comment">//     let string = function () &#123;</span></span><br><span class="line"><span class="comment">//         /*</span></span><br><span class="line"><span class="comment">//   ______                    _ _                 _</span></span><br><span class="line"><span class="comment">//  |  ____|                  | | |               | |</span></span><br><span class="line"><span class="comment">//  | |__ ___  _ __ ___   __ _| | |__   __ _ _   _| |_</span></span><br><span class="line"><span class="comment">//  |  __/ _ \| &#x27;_ ` _ \ / _` | | &#x27;_ \ / _` | | | | __|</span></span><br><span class="line"><span class="comment">//  | | | (_) | | | | | | (_| | | | | | (_| | |_| | |_</span></span><br><span class="line"><span class="comment">//  |_|  \___/|_| |_| |_|\__,_|_|_| |_|\__,_|\__,_|\__|</span></span><br><span class="line">                                                    </span><br><span class="line"><span class="comment">//                 ───▄▀▀▀▄▄▄▄▄▄▄▀▀▀▄───</span></span><br><span class="line"><span class="comment">//                 ───█▒▒░░░░░░░░░▒▒█───</span></span><br><span class="line"><span class="comment">//                 ────█░░█░░░░░█░░█────</span></span><br><span class="line"><span class="comment">//                 ─▄▄──█░░░▀█▀░░░█──▄▄─</span></span><br><span class="line"><span class="comment">//                 █░░█─▀▄░░░░░░░▄▀─█░░█</span></span><br><span class="line">                                                    </span><br><span class="line"><span class="comment">//         */</span></span><br><span class="line"><span class="comment">//     &#125;;</span></span><br><span class="line"><span class="comment">//     console.log(string.makeMulti());</span></span><br><span class="line"><span class="comment">//     console.log(&quot;欢迎访问 %cFomalhaut🥝の小家 &quot;, &quot;color:#1fc7b6;font-weight:bold&quot;);</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">var</span> now1 = <span class="keyword">new</span> <span class="title class_">Date</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createtime1</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> grt = <span class="keyword">new</span> <span class="title class_">Date</span>(<span class="string">&quot;08/09/2022 00:00:00&quot;</span>); <span class="comment">//此处修改你的建站时间或者网站上线时间</span></span><br><span class="line">    now1.<span class="title function_">setTime</span>(now1.<span class="title function_">getTime</span>() + <span class="number">250</span>);</span><br><span class="line">    <span class="keyword">var</span> days = (now1 - grt) / <span class="number">1000</span> / <span class="number">60</span> / <span class="number">60</span> / <span class="number">24</span>;</span><br><span class="line">    <span class="keyword">var</span> dnum = <span class="title class_">Math</span>.<span class="title function_">floor</span>(days);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> ascll = [</span><br><span class="line">        <span class="string">`欢迎来到Fomalhaut🥝の小家!`</span>,</span><br><span class="line">        <span class="string">`Future is now 🍭🍭🍭`</span>,</span><br><span class="line">        <span class="string">`</span></span><br><span class="line"><span class="string">        </span></span><br><span class="line"><span class="string">███████  ██████  ███    ███  █████  ██      ██   ██  █████  ██    ██ ████████ </span></span><br><span class="line"><span class="string">██      ██    ██ ████  ████ ██   ██ ██      ██   ██ ██   ██ ██    ██    ██    </span></span><br><span class="line"><span class="string">█████   ██    ██ ██ ████ ██ ███████ ██      ███████ ███████ ██    ██    ██    </span></span><br><span class="line"><span class="string">██      ██    ██ ██  ██  ██ ██   ██ ██      ██   ██ ██   ██ ██    ██    ██    </span></span><br><span class="line"><span class="string">██       ██████  ██      ██ ██   ██ ███████ ██   ██ ██   ██  ██████     ██   </span></span><br><span class="line"><span class="string">                                              </span></span><br><span class="line"><span class="string">`</span>,</span><br><span class="line">        <span class="string">&quot;小站已经苟活&quot;</span>,</span><br><span class="line">        dnum,</span><br><span class="line">        <span class="string">&quot;天啦!&quot;</span>,</span><br><span class="line">        <span class="string">&quot;©2022 By Fomalhaut&quot;</span>,</span><br><span class="line">    ];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">setTimeout</span>(</span><br><span class="line">        <span class="variable language_">console</span>.<span class="property">log</span>.<span class="title function_">bind</span>(</span><br><span class="line">            <span class="variable language_">console</span>,</span><br><span class="line">            <span class="string">`\n%c<span class="subst">$&#123;ascll[<span class="number">0</span>]&#125;</span> %c <span class="subst">$&#123;ascll[<span class="number">1</span>]&#125;</span> %c <span class="subst">$&#123;ascll[<span class="number">2</span>]&#125;</span> %c<span class="subst">$&#123;ascll[<span class="number">3</span>]&#125;</span>%c <span class="subst">$&#123;ascll[<span class="number">4</span>]&#125;</span>%c <span class="subst">$&#123;ascll[<span class="number">5</span>]&#125;</span>\n\n%c <span class="subst">$&#123;ascll[<span class="number">6</span>]&#125;</span>\n`</span>,</span><br><span class="line">            <span class="string">&quot;color:#39c5bb&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;color:#39c5bb&quot;</span>,</span><br><span class="line">            <span class="string">&quot;color:#39c5bb&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;color:#39c5bb&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&quot;</span></span><br><span class="line">        )</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="title function_">createtime1</span>();</span><br><span class="line"></span><br><span class="line"><span class="keyword">function</span> <span class="title function_">createtime2</span>(<span class="params"></span>) &#123;</span><br><span class="line">    <span class="keyword">var</span> ascll2 = [<span class="string">`NCC2-036`</span>, <span class="string">`调用前置摄像头拍照成功，识别为「大聪明」`</span>, <span class="string">`Photo captured: `</span>, <span class="string">` 🤪 `</span>];</span><br><span class="line"></span><br><span class="line">    <span class="built_in">setTimeout</span>(</span><br><span class="line">        <span class="variable language_">console</span>.<span class="property">log</span>.<span class="title function_">bind</span>(</span><br><span class="line">            <span class="variable language_">console</span>,</span><br><span class="line">            <span class="string">`%c <span class="subst">$&#123;ascll2[<span class="number">0</span>]&#125;</span> %c <span class="subst">$&#123;ascll2[<span class="number">1</span>]&#125;</span> %c \n<span class="subst">$&#123;ascll2[<span class="number">2</span>]&#125;</span> %c\n<span class="subst">$&#123;ascll2[<span class="number">3</span>]&#125;</span>`</span>,</span><br><span class="line">            <span class="string">&quot;color:white; background-color:#10bcc0&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&quot;</span>,</span><br><span class="line">            <span class="string">&#x27;background:url(&quot;https://unpkg.zhimg.com/anzhiyu-assets@latest/image/common/tinggge.gif&quot;) no-repeat;font-size:450%&#x27;</span></span><br><span class="line">        )</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="variable language_">console</span>.<span class="property">log</span>.<span class="title function_">bind</span>(<span class="variable language_">console</span>, <span class="string">&quot;%c WELCOME %c 欢迎光临，大聪明&quot;</span>, <span class="string">&quot;color:white; background-color:#23c682&quot;</span>, <span class="string">&quot;&quot;</span>));</span><br><span class="line"></span><br><span class="line">    <span class="built_in">setTimeout</span>(</span><br><span class="line">        <span class="variable language_">console</span>.<span class="property">warn</span>.<span class="title function_">bind</span>(</span><br><span class="line">            <span class="variable language_">console</span>,</span><br><span class="line">            <span class="string">&quot;%c ⚡ Powered by Fomalhaut🥝 %c 你正在访问Fomalhaut🥝の小家&quot;</span>,</span><br><span class="line">            <span class="string">&quot;color:white; background-color:#f0ad4e&quot;</span>,</span><br><span class="line">            <span class="string">&quot;&quot;</span></span><br><span class="line">        )</span><br><span class="line">    );</span><br><span class="line"></span><br><span class="line">    <span class="built_in">setTimeout</span>(<span class="variable language_">console</span>.<span class="property">log</span>.<span class="title function_">bind</span>(<span class="variable language_">console</span>, <span class="string">&quot;%c W23-12 %c 系统监测到你已打开控制台&quot;</span>, <span class="string">&quot;color:white; background-color:#4f90d9&quot;</span>, <span class="string">&quot;&quot;</span>));</span><br><span class="line">    <span class="built_in">setTimeout</span>(</span><br><span class="line">        <span class="variable language_">console</span>.<span class="property">warn</span>.<span class="title function_">bind</span>(<span class="variable language_">console</span>, <span class="string">&quot;%c S013-782 %c 你现在正处于监控中&quot;</span>, <span class="string">&quot;color:white; background-color:#d9534f&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    );</span><br><span class="line">&#125;</span><br><span class="line"><span class="title function_">createtime2</span>();</span><br><span class="line"></span><br><span class="line"><span class="variable language_">console</span>.<span class="property">log</span> = <span class="keyword">function</span> (<span class="params"></span>) &#123; &#125;;</span><br></pre></td></tr></table></figure><hr><p>字符画的下面可以通过<code>console.log();</code>来添加自己想要的文字<br>例子</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//console.log(&quot;&lt;Custom&gt; %c &lt;Custom&gt;&quot;, &quot;&lt;样式代码&gt;&quot;);</span></span><br><span class="line"><span class="variable language_">console</span>.<span class="title function_">log</span>(<span class="string">&quot;%chello&quot;</span>,<span class="string">&quot;color:#ffa500&quot;</span>)</span><br></pre></td></tr></table></figure><hr><h3 id="网站推荐">网站推荐</h3><p>一些字符画相关网站</p><p>通过文字生成字符画：</p><ul><li><a href="http://patorjk.com/software/taag/#p=display&amp;f=Graffiti&amp;t=Type%20Something%20">patorjk.com</a></li></ul><p>根据图片生成字符画:</p><ul><li><a href="https://www.degraeve.com/img2txt.php">DeGraeve.com</a></li><li><a href="http://life.chacuo.net/convertphoto2char">chacuo.net</a>(这个网站还提供了很多好用的工具)</li></ul><p>小素材:</p><ul><li><a href="http://fuhao.tuwenla.com/xiaowenzihui.html">小型符号图案、字符画大全</a></li></ul>]]></content>
      
      
      <categories>
          
          <category> hexo美化 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>hexo的踩坑日志</title>
      <link href="/2022/12/07/hexo%E7%9A%84%E8%B8%A9%E5%9D%91%E6%97%A5%E5%BF%97/"/>
      <url>/2022/12/07/hexo%E7%9A%84%E8%B8%A9%E5%9D%91%E6%97%A5%E5%BF%97/</url>
      
        <content type="html"><![CDATA[<h1>hexo的踩坑日志</h1><p>#2022/12/10</p><h3 id="评论区搭建">评论区搭建</h3><p>好消息！留言板开放啦！！！！<br>今天搭留言板快搭傻了，整了一天的valine没有整成功，最后还是决定转到twikoo，用vercel部署最主要的问题可能就是一开始评论管理面板不知道怎么开😭，密码直接锁定，也没让初始化，好在捣鼓半天无意之中换了一下<code>envId</code>之后就解决了</p><hr><p>#2022/12/7</p><h3 id="博文加密">博文加密</h3><p>详见<a href="https://github.com/D0n9X1n/hexo-blog-encrypt/blob/master/ReadMe.zh.md#%E4%BF%AE%E6%94%B9%E5%8A%A0%E5%AF%86%E6%A8%A1%E6%9D%BF">官方文档</a></p><hr><h3 id="代码块错乱">代码块错乱</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 第一个代码块后加了两个空格，会有异常</span></span><br><span class="line">```  </span><br><span class="line">```Python</span><br><span class="line">乱了吧</span><br><span class="line">```  </span><br></pre></td></tr></table></figure><p>把后面两个空格去掉就好</p><hr><h3 id="github图床更新">github图床更新</h3><p>然后在带有 <a href="http://Readme.md">Readme.md</a> 文件的那个文件夹内，右键打开 Git Bash（注意看清楚是什么文件夹），然后依次输入以下命令把更改推送到远程仓库</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 将更改提交</span></span><br><span class="line">git add .</span><br><span class="line">git commit -m <span class="string">&quot;更新图片&quot;</span></span><br><span class="line"><span class="comment"># 推送至github仓库</span></span><br><span class="line">git push</span><br></pre></td></tr></table></figure><hr><h3 id="hexo更新部署">hexo更新部署</h3><p>hexo更新：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl;hexo s</span><br></pre></td></tr></table></figure><p>hexo部署：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">hexo cl;hexo g;hexo d</span><br></pre></td></tr></table></figure><hr><h3 id="hexo字数统计设置">hexo字数统计设置</h3><blockquote><p>必须安装依赖！</p></blockquote><ol><li>安装依赖</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm install hexo-wordcount --save</span><br></pre></td></tr></table></figure><ol start="2"><li>开启配置：修改主题配置文件<code>_config.butterfly.yml</code> 中的 <code>wordcount</code></li></ol><figure class="highlight yml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="attr">wordcount:</span></span><br><span class="line">  <span class="attr">enable:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">post_wordcount:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">min2read:</span> <span class="literal">true</span></span><br><span class="line">  <span class="attr">total_wordcount:</span> <span class="literal">true</span></span><br></pre></td></tr></table></figure><hr><h3 id="markdown数学公式不显示">Markdown数学公式不显示</h3><p>今天用hexo写博文，发现一开始在浏览器上数学公式没法渲染出来，通过<a href="https://www.nickxu.top/">NXの博客</a>得到了解决</p><ol><li>先卸载自带渲染器，若有下载其他一并卸载</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm un hexo-renderer-marked --save </span><br></pre></td></tr></table></figure><ol start="2"><li>安装<code>hexo-renderer-markdown-it-katex</code></li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">npm i hexo-renderer-markdown-it-katex</span><br></pre></td></tr></table></figure><ol start="3"><li>在<code>_config.yml</code>的末尾添加下面的内容</li></ol><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">markdown:</span><br><span class="line">  render:</span><br><span class="line">    html: true</span><br><span class="line">    xhtmlOut: false</span><br><span class="line">    breaks: true</span><br><span class="line">    linkify: true</span><br><span class="line">    typographer: true</span><br><span class="line">  plugins:</span><br><span class="line">  anchors:</span><br><span class="line">    level: 1</span><br><span class="line">    collisionSuffix: &#x27;&#x27;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      
        <tags>
            
            <tag> hexo </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Principles of cyber-physical systems design Lab4</title>
      <link href="/2022/12/05/Principles-of-cyber-physical-systems-design-Lab4/"/>
      <url>/2022/12/05/Principles-of-cyber-physical-systems-design-Lab4/</url>
      
        <content type="html"><![CDATA[<h1>Neural Network Design</h1><h2 id="内容">内容</h2><ul><li>神经网络的结构和功能</li><li>在Python上制作简单的神经网络</li><li>学会准备训练数据，在Python上训练简单的神经网络</li></ul><h2 id="任务">任务</h2><p>网络物理系统的任务之一是利用机器视觉进行图像识别。在这个实验，我们将考虑这类问题的解决方案<br>我们将准备两个数据集文件:<code>mnist_train.csv</code>和<code>mnist_test.csv</code>(手写数字的数据集)，第一个文件用于训练神经网络，第二个文件用于验证神经网络的功能，每个文件包含多行的数字图像的28*28的像素数组，其中一个例子如下：<br><img src="https://picture-warehouse-1.pages.dev/img/PhyCLab4/figure1.png" alt="figure1"></p><p>人工神经网络是由神经元组成的，所以为了了解它们，我们从一个神经元的数学模型开始。人工神经元是一种自然神经元的简化模型。它有许多输入。每个输入都有自己的权重（<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>w</mi><mi>n</mi></msub></mrow><annotation encoding="application/x-tex">w_n</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.58056em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>）。在神经元内部，输入S的和由激活函数<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F (S)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mclose">)</span></span></span></span>处理。计算这个函数的结果成为神经元的输出：<br><img src="https://picture-warehouse-1.pages.dev/img/PhyCLab4/figure2.png" alt="figure2"><br>因此，一个神经元可表达为：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>Y</mi><mo>=</mo><mi>F</mi><mo stretchy="false">(</mo><munderover><mo>∑</mo><mrow><mi>i</mi><mo>=</mo><mn>1</mn></mrow><mi>n</mi></munderover><msub><mi>w</mi><mi>i</mi></msub><mo>⋅</mo><msub><mi>x</mi><mi>i</mi></msub><mo stretchy="false">)</mo><mtext>或</mtext><mi>Y</mi><mo>=</mo><mi>F</mi><mo stretchy="false">(</mo><mi>W</mi><mo>⋅</mo><mi>X</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">Y=F(\sum_{i=1}^{n}w_i\cdot x_i) 或     Y=F(W \cdot X)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:2.929066em;vertical-align:-1.277669em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mop op-limits"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:1.6513970000000002em;"><span style="top:-1.872331em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">i</span><span class="mrel mtight">=</span><span class="mord mtight">1</span></span></span></span><span style="top:-3.050005em;"><span class="pstrut" style="height:3.05em;"></span><span><span class="mop op-symbol large-op">∑</span></span></span><span style="top:-4.3000050000000005em;margin-left:0em;"><span class="pstrut" style="height:3.05em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:1.277669em;"><span></span></span></span></span></span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.31166399999999994em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">i</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mord cjk_fallback">或</span><span class="mord mathdefault" style="margin-right:0.22222em;">Y</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mclose">)</span></span></span></span></span></p><p>其中</p><p><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>w</mi><mn>1</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>w</mi><mn>2</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>L</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>w</mi><mi>n</mi></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">W=\left[    \begin{matrix}   w_1&amp;w_2&amp;L&amp;w_n \end{matrix}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span></span></span></span>是输入信号的权重向量<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>X</mi><mo>=</mo><msup><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>x</mi><mn>1</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>x</mi><mn>2</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>L</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>x</mi><mi>n</mi></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">X=\left[\begin{matrix}    x_1&amp;x_2&amp;L&amp;x_n\end{matrix}\right]^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">X</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.431241em;vertical-align:-0.35001em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">x</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.081231em;"><span style="top:-3.3029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>是输入信号值的列向量<br>非线性函数最常被用作激活函数，因为只有这样的神经元允许用少量节点解决非平凡问题。最常见的两个函数是:</p><ul><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo><mo>=</mo><mi>t</mi><mi>h</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">F(S)=th(S)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault">t</span><span class="mord mathdefault">h</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mclose">)</span></span></span></span></li><li><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>F</mi><mo stretchy="false">(</mo><mi>S</mi><mo stretchy="false">)</mo><mo>=</mo><mfrac><mn>1</mn><mrow><mn>1</mn><mo>+</mo><msup><mi>e</mi><mrow><mo>−</mo><mi>S</mi></mrow></msup></mrow></mfrac></mrow><annotation encoding="application/x-tex">F(S)=\frac{1}{1+e^{-S}}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord mathdefault" style="margin-right:0.05764em;">S</span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.2553039999999998em;vertical-align:-0.4101959999999999em;"></span><span class="mord"><span class="mopen nulldelimiter"></span><span class="mfrac"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.845108em;"><span style="top:-2.648135em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mbin mtight">+</span><span class="mord mtight"><span class="mord mathdefault mtight">e</span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.7740928571428571em;"><span style="top:-2.786em;margin-right:0.07142857142857144em;"><span class="pstrut" style="height:2.5em;"></span><span class="sizing reset-size3 size1 mtight"><span class="mord mtight"><span class="mord mtight">−</span><span class="mord mathdefault mtight" style="margin-right:0.05764em;">S</span></span></span></span></span></span></span></span></span></span></span></span><span style="top:-3.23em;"><span class="pstrut" style="height:3em;"></span><span class="frac-line" style="border-bottom-width:0.04em;"></span></span><span style="top:-3.394em;"><span class="pstrut" style="height:3em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.4101959999999999em;"><span></span></span></span></span></span><span class="mclose nulldelimiter"></span></span></span></span></span></li></ul><p>这两个函数都是sigmoid函数，在实验当中我们将使用第二个函数</p><blockquote><p>激活函数的主要作用是<strong>改变之前数据的线性关系</strong>， 如果网络中全部是线性变换，则多层网络可以通过矩阵变换，直接转换成一层神经网络。 所以激活函数的存在，<strong>使得神经网络的“多层”有了实际的意义</strong>，使网络更加强大，增加网络的能力， 使它可以学习复杂的事物，复杂的数据，以及表示输入输出之间非线性的复杂的任意函数映射。 激活函数的另一个重要的作用是 <strong>执行数据的归一化，将输入数据映射到某个范围内</strong>，再往下传递，这样做的好处是可以限制数据的扩张，防止数据过大导致的溢出风险</p></blockquote><h2 id="感知器-神经元">感知器（神经元）</h2><p>神经元被分层收集：输入、隐藏、输出。第一个信号被发送到输入层。然后将它们传输到隐藏层（可能有不同数量的隐藏层）。这里的信息将按照上述算法进行处理。信息从最后一个隐藏层传输到输出层。输出信号是在神经网络内处理信息的期望结果（例如，它可以是对象分类、识别等）:<br><img src="https://picture-warehouse-1.pages.dev/img/PhyCLab4/figure3.png" alt="figure3"><br>任何一层的输出计算结果如下：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo>=</mo><mi>F</mi><mo stretchy="false">(</mo><msub><mi>W</mi><mi>s</mi></msub><mo>⋅</mo><mi>I</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O=F(W_s\cdot{I})</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">s</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07847em;">I</span></span><span class="mclose">)</span></span></span></span></span></p><p>其中<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>w</mi><mn>1</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>w</mi><mn>2</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>L</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>w</mi><mi>n</mi></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">W=\left[    \begin{matrix}   w_1&amp;w_2&amp;L&amp;w_n \end{matrix}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.20001em;vertical-align:-0.35001em;"></span><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span></span></span></span>是输入信号的权重<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi><mo>=</mo><msup><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>i</mi><mn>1</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>i</mi><mn>2</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>L</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>i</mi><mi>n</mi></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">I=\left[\begin{matrix}    i_1&amp;i_2&amp;L&amp;i_n\end{matrix}\right]^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.431241em;vertical-align:-0.35001em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.081231em;"><span style="top:-3.3029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>是输入信号值<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo>=</mo><msup><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>o</mi><mn>1</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>o</mi><mn>2</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>L</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>o</mi><mi>m</mi></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">O=\left[\begin{matrix}    o_1&amp;o_2&amp;L&amp;o_m\end{matrix}\right]^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.431241em;vertical-align:-0.35001em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">m</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.081231em;"><span style="top:-3.3029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>是输出信号值<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>W</mi><mo>=</mo><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>w</mi><mn>11</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>w</mi><mn>12</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>K</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>w</mi><mrow><mn>1</mn><mi>n</mi></mrow></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>w</mi><mn>21</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>w</mi><mn>22</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>K</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>w</mi><mrow><mn>2</mn><mi>n</mi></mrow></msub></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>M</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>M</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>O</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>M</mi></mstyle></mtd></mtr><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>w</mi><mrow><mi>m</mi><mn>1</mn></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>w</mi><mrow><mi>m</mi><mn>2</mn></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>L</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>w</mi><mrow><mi>m</mi><mi>n</mi></mrow></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow></mrow><annotation encoding="application/x-tex">W=\left[\begin{matrix}    w_{11}&amp;w_{12}&amp;K&amp;w_{1n}\\    w_{21}&amp;w_{22}&amp;K&amp;w_{2n}\\    M&amp;M&amp;O&amp;M\\    w_{m1}&amp;w_{m2}&amp;L&amp;w_{mn}\end{matrix}\right]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:4.80303em;vertical-align:-2.15003em;"></span><span class="minner"><span class="mopen"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎣</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎢</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎡</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.07153em;">K</span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">O</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6500000000000004em;"><span style="top:-4.8100000000000005em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">1</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-3.61em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mtight">2</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span><span style="top:-2.4099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.10903em;">M</span></span></span><span style="top:-1.2099999999999997em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight">m</span><span class="mord mathdefault mtight">n</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.1500000000000004em;"><span></span></span></span></span></span></span></span><span class="mclose"><span class="delimsizing mult"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:2.6529999999999996em;"><span style="top:-1.6499900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎦</span></span></span><span style="top:-2.79999em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.3959900000000003em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-3.4119800000000002em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎥</span></span></span><span style="top:-4.653em;"><span class="pstrut" style="height:3.1550000000000002em;"></span><span class="delimsizinginner delim-size4"><span>⎤</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:2.15003em;"><span></span></span></span></span></span></span></span></span></span></span>是层内输入信号的权重矩阵（n为输入信号数，m为层内神经元数）</p><p>对于具有一个隐藏层的网络，计算结果可表示为：<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo>=</mo><mi>F</mi><mo stretchy="false">(</mo><msub><mi>W</mi><mrow><mi>O</mi><mi>L</mi></mrow></msub><mo>⋅</mo><mi>F</mi><mo stretchy="false">(</mo><msub><mi>W</mi><mrow><mi>H</mi><mi>L</mi></mrow></msub><mo stretchy="false">)</mo><mo>⋅</mo><mi>I</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O=F(W_{OL}\cdot F(W_{HL})\cdot I)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">O</span><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mclose">)</span></span></span></span><br>其中<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mrow><mi>H</mi><mi>L</mi></mrow></msub></mrow><annotation encoding="application/x-tex">W_{HL}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为隐藏层权重矩阵，<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>W</mi><mrow><mi>O</mi><mi>L</mi></mrow></msub></mrow><annotation encoding="application/x-tex">W_{OL}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">O</span><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span>为输出层权重矩阵</p><h2 id="训练神经网络">训练神经网络</h2><h3 id="如何分配权重以得到理想结果？">如何分配权重以得到理想结果？</h3><p>根据目的的不同，神经网络会以不同的方式进行训练。在这次实验中，我们需要训练神经网络识别数字的图像。我们将使用一组测试信号作为神经网络的输入信号<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>I</mi></mrow><annotation encoding="application/x-tex">I</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span></span></span></span>，并计算一组输出<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi></mrow><annotation encoding="application/x-tex">O</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span></span></span></span>，我们将将其与期望的测试结果进行比较。输出层的误差计算方法如下：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mrow><mi>O</mi><mi>L</mi></mrow></msub><mo>=</mo><msub><mi>T</mi><mrow><mi>O</mi><mi>L</mi></mrow></msub><mo>−</mo><msub><mi>O</mi><mrow><mi>O</mi><mi>L</mi></mrow></msub></mrow><annotation encoding="application/x-tex">E_{OL}=T_{OL}-O_{OL}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">O</span><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">O</span><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">O</span><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>其中<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>T</mi><mo>=</mo><msup><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>t</mi><mn>1</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>t</mi><mn>2</mn></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>L</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>t</mi><mi>n</mi></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">T=\left[\begin{matrix}    t_1&amp;t_2&amp;L&amp;t_n\end{matrix}\right]^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.431241em;vertical-align:-0.35001em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">1</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.30110799999999993em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight">2</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault">t</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.151392em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight">n</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.081231em;"><span style="top:-3.3029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>为期望结果(Target)<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>O</mi><mrow><mi>O</mi><mi>L</mi></mrow></msub><mo>=</mo><msup><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>O</mi><mrow><mi>O</mi><mi>L</mi><mi mathvariant="normal">.</mi><mn>1</mn></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>O</mi><mrow><mi>O</mi><mi>L</mi><mi mathvariant="normal">.</mi><mn>2</mn></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>L</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>O</mi><mrow><mi>O</mi><mi>L</mi><mi mathvariant="normal">.</mi><mi>N</mi></mrow></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">O_{OL}=\left[\begin{matrix}    O_{OL.1}&amp;O_{OL.2}&amp;L&amp;O_{OL.N}\end{matrix}\right]^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">O</span><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.431241em;vertical-align:-0.35001em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">O</span><span class="mord mathdefault mtight">L</span><span class="mord mtight">.</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">O</span><span class="mord mathdefault mtight">L</span><span class="mord mtight">.</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">O</span><span class="mord mathdefault mtight">L</span><span class="mord mtight">.</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.081231em;"><span style="top:-3.3029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>为输出值<br><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>O</mi><mrow><mi>O</mi><mi>L</mi></mrow></msub><mo>=</mo><msup><mrow><mo fence="true">[</mo><mtable rowspacing="0.15999999999999992em" columnspacing="1em"><mtr><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>O</mi><mrow><mi>O</mi><mi>L</mi><mi mathvariant="normal">.</mi><mn>1</mn></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>O</mi><mrow><mi>O</mi><mi>L</mi><mi mathvariant="normal">.</mi><mn>2</mn></mrow></msub></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><mi>L</mi></mstyle></mtd><mtd><mstyle scriptlevel="0" displaystyle="false"><msub><mi>O</mi><mrow><mi>O</mi><mi>L</mi><mi mathvariant="normal">.</mi><mi>N</mi></mrow></msub></mstyle></mtd></mtr></mtable><mo fence="true">]</mo></mrow><mi>T</mi></msup></mrow><annotation encoding="application/x-tex">O_{OL}=\left[\begin{matrix}    O_{OL.1}&amp;O_{OL.2}&amp;L&amp;O_{OL.N}\end{matrix}\right]^T</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">O</span><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1.431241em;vertical-align:-0.35001em;"></span><span class="minner"><span class="minner"><span class="mopen delimcenter" style="top:0em;"><span class="delimsizing size1">[</span></span><span class="mord"><span class="mtable"><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">O</span><span class="mord mathdefault mtight">L</span><span class="mord mtight">.</span><span class="mord mtight">1</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">O</span><span class="mord mathdefault mtight">L</span><span class="mord mtight">.</span><span class="mord mtight">2</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord mathdefault">L</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span><span class="arraycolsep" style="width:0.5em;"></span><span class="arraycolsep" style="width:0.5em;"></span><span class="col-align-c"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.8500000000000001em;"><span style="top:-3.01em;"><span class="pstrut" style="height:3em;"></span><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">O</span><span class="mord mathdefault mtight">L</span><span class="mord mtight">.</span><span class="mord mathdefault mtight" style="margin-right:0.10903em;">N</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.35000000000000003em;"><span></span></span></span></span></span></span></span><span class="mclose delimcenter" style="top:0em;"><span class="delimsizing size1">]</span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:1.081231em;"><span style="top:-3.3029em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span></span></span></span>为输出层误差值<br>隐藏层的误差计算如下：</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><msub><mi>E</mi><mrow><mi>H</mi><mi>L</mi></mrow></msub><mi>T</mi></msup><mo>−</mo><msub><mi>E</mi><mrow><mi>O</mi><mi>L</mi></mrow></msub></mrow><annotation encoding="application/x-tex">{E_{HL}}^T-E_{OL}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0645609999999999em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.914561em;"><span style="top:-3.1362300000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">O</span><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>权重通过梯度下降法进行改变:</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi><msub><mi>w</mi><mrow><mi>O</mi><mi>L</mi><mi mathvariant="normal">.</mi><mi>j</mi><mi>k</mi></mrow></msub><mo>=</mo><mo>−</mo><mn>2</mn><mo>⋅</mo><mi>α</mi><mo>⋅</mo><msub><mi>e</mi><mrow><mi>H</mi><mi>L</mi><mi mathvariant="normal">.</mi><mi>k</mi></mrow></msub><mo>⋅</mo><msub><mi>o</mi><mrow><mi>O</mi><mi>L</mi><mi mathvariant="normal">.</mi><mi>k</mi></mrow></msub><mo>⋅</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>o</mi><mrow><mi>O</mi><mi>L</mi><mi mathvariant="normal">.</mi><mi>k</mi></mrow></msub><mo stretchy="false">)</mo><mo>⋅</mo><msub><mi>o</mi><mrow><mi>H</mi><mi>L</mi><mi mathvariant="normal">.</mi><mi>j</mi></mrow></msub></mrow><annotation encoding="application/x-tex">\Delta w_{OL.jk}=-2\cdot \alpha\cdot e_{HL.k}\cdot o_{OL.k}\cdot (1-o_{OL.k})\cdot o_{HL.j}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord">Δ</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">O</span><span class="mord mathdefault mtight">L</span><span class="mord mtight">.</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.59445em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span><span class="mord mathdefault mtight">L</span><span class="mord mtight">.</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.59445em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">O</span><span class="mord mathdefault mtight">L</span><span class="mord mtight">.</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">O</span><span class="mord mathdefault mtight">L</span><span class="mord mtight">.</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.716668em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.328331em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span><span class="mord mathdefault mtight">L</span><span class="mord mtight">.</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi mathvariant="normal">Δ</mi><msub><mi>w</mi><mrow><mi>H</mi><mi>L</mi><mi mathvariant="normal">.</mi><mi>j</mi><mi>k</mi></mrow></msub><mo>=</mo><mo>−</mo><mn>2</mn><mo>⋅</mo><mi>α</mi><mo>⋅</mo><msub><mi>e</mi><mrow><mi>H</mi><mi>L</mi><mi mathvariant="normal">.</mi><mi>k</mi></mrow></msub><mo>⋅</mo><msub><mi>o</mi><mrow><mi>H</mi><mi>L</mi><mi mathvariant="normal">.</mi><mi>k</mi></mrow></msub><mo>⋅</mo><mo stretchy="false">(</mo><mn>1</mn><mo>−</mo><msub><mi>o</mi><mrow><mi>H</mi><mi>L</mi><mi mathvariant="normal">.</mi><mi>k</mi></mrow></msub><mo stretchy="false">)</mo><mo>⋅</mo><msub><mi>i</mi><mi>j</mi></msub></mrow><annotation encoding="application/x-tex">\Delta w_{HL.jk}=-2\cdot \alpha\cdot e_{HL.k}\cdot o_{HL.k}\cdot (1-o_{HL.k})\cdot i_j</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.969438em;vertical-align:-0.286108em;"></span><span class="mord">Δ</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02691em;">w</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.3361079999999999em;"><span style="top:-2.5500000000000003em;margin-left:-0.02691em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span><span class="mord mathdefault mtight">L</span><span class="mord mtight">.</span><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.72777em;vertical-align:-0.08333em;"></span><span class="mord">−</span><span class="mord">2</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.44445em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.59445em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">e</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span><span class="mord mathdefault mtight">L</span><span class="mord mtight">.</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.59445em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span><span class="mord mathdefault mtight">L</span><span class="mord mtight">.</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">(</span><span class="mord">1</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord"><span class="mord mathdefault">o</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.33610799999999996em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span><span class="mord mathdefault mtight">L</span><span class="mord mtight">.</span><span class="mord mathdefault mtight" style="margin-right:0.03148em;">k</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.9456279999999999em;vertical-align:-0.286108em;"></span><span class="mord"><span class="mord mathdefault">i</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.311664em;"><span style="top:-2.5500000000000003em;margin-left:0em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.05724em;">j</span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.286108em;"><span></span></span></span></span></span></span></span></span></span></span></p><p>此处<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>α</mi></mrow><annotation encoding="application/x-tex">\alpha</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.43056em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.0037em;">α</span></span></span></span>为学习速率，表征权重的变化率</p><p>关于损失函数(loss function)&amp;梯度下降法(gradient descent method)可以参考B站<a href="https://space.bilibili.com/504715181/channel/collectiondetail?sid=643185">王木头学科学</a>的相关视频</p><h2 id="代码部分">代码部分</h2><h3 id="1-导入库">1.导入库</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Step 1</span></span><br><span class="line"><span class="keyword">import</span> numpy <span class="keyword">as</span> npy</span><br><span class="line"><span class="keyword">import</span> matplotlib.pyplot <span class="keyword">as</span> plot</span><br><span class="line"><span class="keyword">from</span> scipy.special <span class="keyword">import</span> expit <span class="keyword">as</span> fact</span><br><span class="line"><span class="comment">#expit就是上文中提到的sigmoid函数</span></span><br></pre></td></tr></table></figure><h3 id="2-编写函数设置基本网络参数">2.编写函数设置基本网络参数</h3><p>我们需要设置输入、输出、隐藏层中的神经元数量以及学习因子α</p><p>为了训练这个网络，我们将采用一个现成的MNIST数据集（Modified National Institute of Standards and Technology）——一个具有大量的手写数字样本数据库。该数据库是由美国国家标准与技术研究所提出的一个标准，主要用于使用机器学习来校准和比较图像识别方法。</p><p>数据集为csv格式，中间用逗号分隔。训练包包含约60000个标记样本，较小的测试包包含约10000个。</p><p>每个样本包含一个从<strong>0-9开始的标记</strong>（显示的是哪个数字）和一个<strong>28x28像素</strong>的数组。共有784个值域为0-255值。因此，我们需要<strong>784个输入信号</strong>（28*28）和<strong>10个输出值</strong>（0-9）。我们可以在隐藏层中设置任意数量的神经元。函数名为<code>init_net（）</code>：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Step 2</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">init_net</span>(<span class="params">i</span>):</span><br><span class="line">    input_nodes = <span class="number">784</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Input the number of hidden neurons: &#x27;</span>)</span><br><span class="line">    hidden_nodes = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">    out_nodes = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Input the training speed (0.5): &#x27;</span>)</span><br><span class="line">    learn_speed = <span class="built_in">float</span>(<span class="built_in">input</span>())</span><br><span class="line">    <span class="keyword">return</span> input_nodes, hidden_nodes, out_nodes, learn_speed</span><br></pre></td></tr></table></figure><h3 id="3-创建一个设置神经网络权重初始值的函数">3.创建一个设置神经网络权重初始值的函数</h3><p>大多数情况下，我们并不清楚权重初始值应该为多少，对此，我们的策略是让他们在一定范围内随机取值，我们可以用函数<code>uniform(low, high, size)</code>来实现这一操作<br><code>low</code>对应参数为范围最低值，<code>high</code>对应参数为范围最高值，<code>size</code>对应参数为数组维度维度大小，numpy中矩阵size可以用(m,n)指定</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Step 3</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">create_net</span>(<span class="params">input_nodes, hidden_nodes, out_nodes</span>):</span><br><span class="line">    w_in2hidden = npy.random.uniform(-<span class="number">0.5</span>, <span class="number">0.5</span>, (hidden_nodes, input_nodes))</span><br><span class="line">    w_hidden2out = npy.random.uniform(-<span class="number">0.5</span>, <span class="number">0.5</span>, (out_nodes, hidden_nodes))</span><br><span class="line">    <span class="keyword">return</span> w_in2hidden, w_hidden2out</span><br></pre></td></tr></table></figure><h3 id="4-创建一个计算神经网络输出的函数">4.创建一个计算神经网络输出的函数</h3><p>公式：<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mi>O</mi><mo>=</mo><mi>F</mi><mo stretchy="false">(</mo><msub><mi>W</mi><mrow><mi>O</mi><mi>L</mi></mrow></msub><mo>⋅</mo><mi>F</mi><mo stretchy="false">(</mo><msub><mi>W</mi><mrow><mi>H</mi><mi>L</mi></mrow></msub><mo stretchy="false">)</mo><mo>⋅</mo><mi>I</mi><mo stretchy="false">)</mo></mrow><annotation encoding="application/x-tex">O=F(W_{OL}\cdot F(W_{HL})\cdot I)</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.68333em;vertical-align:0em;"></span><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">O</span><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.13889em;">F</span><span class="mopen">(</span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">W</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mclose">)</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">⋅</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mord mathdefault" style="margin-right:0.07847em;">I</span><span class="mclose">)</span></span></span></span></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Step 4</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">net_output</span>(<span class="params">w_in2hidden, w_hidden2out, input_signal, return_hidden</span>):</span><br><span class="line">    inputs = npy.array(input_signal, ndmin=<span class="number">2</span>).T</span><br><span class="line">    <span class="comment"># ndmin=2定义最小维度，表示我们的列向量是二维矩阵</span></span><br><span class="line">    hidden_in = npy.dot(w_in2hidden, inputs)</span><br><span class="line">    hidden_out = fact(hidden_in)</span><br><span class="line">    final_in = npy.dot(w_hidden2out, hidden_out)</span><br><span class="line">    final_out = fact(final_in)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span> return_hidden == <span class="number">0</span>:</span><br><span class="line">        <span class="keyword">return</span> final_out</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> final_out, hidden_out</span><br><span class="line">    <span class="comment"># 如果flag&quot;return_hind&quot;设置为1</span></span><br></pre></td></tr></table></figure><h3 id="5-创建一个来训练神经网络的函数">5.创建一个来训练神经网络的函数</h3><p>该函数的输入参数为：期望的网络输出列表<code>（target_list）</code>；与其对应的输入信号<code>（input_signal）</code>；神经网络权重矩阵<code>（w_in2hidden、w_hidden2out）</code>和学习因子<code>（learn_speed）</code></p><p>我们需要计算输出层误差<code>(out_errors)</code>:</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msub><mi>E</mi><mrow><mi>O</mi><mi>L</mi></mrow></msub><mo>=</mo><msub><mi>T</mi><mrow><mi>O</mi><mi>L</mi></mrow></msub><mo>−</mo><msub><mi>O</mi><mrow><mi>O</mi><mi>L</mi></mrow></msub></mrow><annotation encoding="application/x-tex">E_{OL}=T_{OL}-O_{OL}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">O</span><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2777777777777778em;"></span><span class="mrel">=</span><span class="mspace" style="margin-right:0.2777777777777778em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.13889em;">T</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.13889em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">O</span><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.02778em;">O</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.02778em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">O</span><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p><code>out_errors = targets - final_out</code><br>以及隐藏层误差<code>(hidden_errors)</code>:</p><p class='katex-block'><span class="katex-display"><span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><msup><msub><mi>E</mi><mrow><mi>H</mi><mi>L</mi></mrow></msub><mi>T</mi></msup><mo>−</mo><msub><mi>E</mi><mrow><mi>O</mi><mi>L</mi></mrow></msub></mrow><annotation encoding="application/x-tex">{E_{HL}}^T-E_{OL}</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1.0645609999999999em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord"><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.08125em;">H</span><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span><span class="msupsub"><span class="vlist-t"><span class="vlist-r"><span class="vlist" style="height:0.914561em;"><span style="top:-3.1362300000000003em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mathdefault mtight" style="margin-right:0.13889em;">T</span></span></span></span></span></span></span></span><span class="mspace" style="margin-right:0.2222222222222222em;"></span><span class="mbin">−</span><span class="mspace" style="margin-right:0.2222222222222222em;"></span></span><span class="base"><span class="strut" style="height:0.83333em;vertical-align:-0.15em;"></span><span class="mord"><span class="mord mathdefault" style="margin-right:0.05764em;">E</span><span class="msupsub"><span class="vlist-t vlist-t2"><span class="vlist-r"><span class="vlist" style="height:0.32833099999999993em;"><span style="top:-2.5500000000000003em;margin-left:-0.05764em;margin-right:0.05em;"><span class="pstrut" style="height:2.7em;"></span><span class="sizing reset-size6 size3 mtight"><span class="mord mtight"><span class="mord mathdefault mtight" style="margin-right:0.02778em;">O</span><span class="mord mathdefault mtight">L</span></span></span></span></span><span class="vlist-s">​</span></span><span class="vlist-r"><span class="vlist" style="height:0.15em;"><span></span></span></span></span></span></span></span></span></span></span></p><p><code>hidden_errors = np.dot(w_hidden2out.T, out_errors)</code><br>使用梯度下降法改变权重:<br><code>w_hidden2out += learn_speed * np.dot((out_errors * final_out * (1 - final_out)), hidden_out.T)</code><br><code>w_in2hidden += learn_speed * np.dot((hidden_errors * hidden_out * (1 - hidden_out)),inputs.T)</code></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Step 5</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">net_train</span>(<span class="params">target_list, input_signal, w_in2hidden, w_hidden2out, learn_speed</span>):</span><br><span class="line">    targets = npy.array(target_list, ndmin=<span class="number">2</span>).T</span><br><span class="line">    inputs = npy.array(input_signal, ndmin=<span class="number">2</span>).T</span><br><span class="line">    final_out, hidden_out = net_output(w_in2hidden, w_hidden2out, input_signal, <span class="number">1</span>)</span><br><span class="line"></span><br><span class="line">    out_errors = targets - final_out</span><br><span class="line">    hidden_errors = npy.dot(w_hidden2out.T, out_errors)</span><br><span class="line"></span><br><span class="line">    w_hidden2out += learn_speed * npy.dot((out_errors * final_out * (<span class="number">1</span> - final_out)), hidden_out.T)</span><br><span class="line">    w_in2hidden += learn_speed * npy.dot((hidden_errors * hidden_out * (<span class="number">1</span> - hidden_out)), inputs.T)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> w_in2hidden, w_hidden2out</span><br></pre></td></tr></table></figure><h3 id="6-编写一个在真实数据上训练网络的函数">6.编写一个在真实数据上训练网络的函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Step 6</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">train_set</span>(<span class="params">w_in2hidden, w_hidden2out, learn_speed</span>):</span><br><span class="line">    data_file = <span class="built_in">open</span>(<span class="string">&quot;mnist_train.csv&quot;</span>, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">    training_list = data_file.readlines()</span><br><span class="line">    data_file.close()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> record <span class="keyword">in</span> training_list:</span><br><span class="line">        all_values = record.split(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">        inputs = (npy.asfarray(all_values[<span class="number">1</span>:]) / <span class="number">255.0</span> * <span class="number">0.999</span>) + <span class="number">0.001</span></span><br><span class="line">        targets = npy.zeros(<span class="number">10</span>) + <span class="number">0.001</span></span><br><span class="line">        targets[<span class="built_in">int</span>(all_values[<span class="number">0</span>])] = <span class="number">1.0</span></span><br><span class="line">        w_in2hidden, w_hidden2out = net_train(targets, inputs, w_in2hidden, w_hidden2out, learn_speed)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> w_in2hidden, w_hidden2out</span><br></pre></td></tr></table></figure><p><code>inputs = (npy.asfarray(all_values[1:]) / 255.0 * 0.999) + 0.001</code>将神经网络输入值转换到<span class="katex"><span class="katex-mathml"><math xmlns="http://www.w3.org/1998/Math/MathML"><semantics><mrow><mo stretchy="false">[</mo><mn>0.001</mn><mo separator="true">,</mo><mn>1.00</mn><mo stretchy="false">]</mo></mrow><annotation encoding="application/x-tex">[0.001,1.00]</annotation></semantics></math></span><span class="katex-html" aria-hidden="true"><span class="base"><span class="strut" style="height:1em;vertical-align:-0.25em;"></span><span class="mopen">[</span><span class="mord">0</span><span class="mord">.</span><span class="mord">0</span><span class="mord">0</span><span class="mord">1</span><span class="mpunct">,</span><span class="mspace" style="margin-right:0.16666666666666666em;"></span><span class="mord">1</span><span class="mord">.</span><span class="mord">0</span><span class="mord">0</span><span class="mclose">]</span></span></span></span>,<strong>如果最小值为0，那么可能导致在训练期间权重不会更新，因此设为0.001</strong>，<code>asfarray(all_values[1:])</code>将index=1之后的数转为实数<br><code>zeros()</code>创建一个指定大小的全零数组<br><code>targets[int(all_values[0])] = 1.0</code>设目标输出为1</p><h3 id="7-编写一个验证网络的函数">7.编写一个验证网络的函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Step 7</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">test_set</span>(<span class="params">w_in2hidden, w_hidden2out</span>):</span><br><span class="line">    data_file = <span class="built_in">open</span>(<span class="string">&quot;mnist_test.csv&quot;</span>, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">    test_list = data_file.readlines()</span><br><span class="line">    data_file.close()</span><br><span class="line">    test = []</span><br><span class="line">    <span class="keyword">for</span> record <span class="keyword">in</span> test_list:</span><br><span class="line">        all_values = record.split(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">        inputs = (npy.asfarray(all_values[<span class="number">1</span>:]) / <span class="number">255.0</span> * <span class="number">0.999</span>) + <span class="number">0.001</span></span><br><span class="line">        out_session = net_output(w_in2hidden, w_hidden2out, inputs, <span class="number">0</span>)</span><br><span class="line">        <span class="keyword">if</span> <span class="built_in">int</span>(all_values[<span class="number">0</span>]) == npy.argmax(out_session):</span><br><span class="line">            test.append(<span class="number">1</span>)</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            test.append(<span class="number">0</span>)</span><br><span class="line">    test = npy.asarray(test)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Net efficiency % =&#x27;</span>, (test.<span class="built_in">sum</span>() / test.size) * <span class="number">100</span>)</span><br></pre></td></tr></table></figure><h3 id="8-编写一个显示来自数据集中的数字图像的函数">8.编写一个显示来自数据集中的数字图像的函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Step 8</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">plot_image</span>(<span class="params">pixels: npy.array</span>):</span><br><span class="line">    plot.imshow(pixels.reshape((<span class="number">28</span>, <span class="number">28</span>)), cmap=<span class="string">&#x27;gray&#x27;</span>)</span><br><span class="line">    plot.show()</span><br></pre></td></tr></table></figure><h3 id="9-训练网络并计算其有效性">9.训练网络并计算其有效性</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Step 9</span></span><br><span class="line">input_nodes, hidden_nodes, out_nodes, learn_speed = init_net()</span><br><span class="line">w_in2hidden, w_hidden2out = create_net(input_nodes, hidden_nodes, out_nodes)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;Test #&#x27;</span>, i + <span class="number">1</span>)</span><br><span class="line">    w_in2hidden, w_hidden2out = train_set(w_in2hidden, w_hidden2out, learn_speed)</span><br><span class="line">    test_set(w_in2hidden, w_hidden2out)</span><br><span class="line"></span><br><span class="line">data_file = <span class="built_in">open</span>(<span class="string">&quot;mnist_train.csv&quot;</span>, <span class="string">&#x27;r&#x27;</span>)</span><br><span class="line">test_list = data_file.readlines()</span><br><span class="line">data_file.close()</span><br><span class="line">all_values = test_list[<span class="built_in">int</span>(<span class="number">10</span>)].split(<span class="string">&#x27;,&#x27;</span>)</span><br><span class="line">inputs = (npy.asfarray(all_values[<span class="number">1</span>:]) / <span class="number">255.0</span> * <span class="number">0.999</span>) + <span class="number">0.001</span></span><br><span class="line">out_session = net_output(w_in2hidden, w_hidden2out, inputs, <span class="number">0</span>)</span><br><span class="line"><span class="built_in">print</span>(npy.argmax(out_session))</span><br><span class="line">plot_image(npy.asfarray(all_values[<span class="number">1</span>:]))</span><br></pre></td></tr></table></figure><h3 id="10-编写一个计算神经网络效率对隐藏神经元数量的依赖性的代码">10.编写一个计算神经网络效率对隐藏神经元数量的依赖性的代码</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># Step 10</span></span><br><span class="line">num_neurons = []</span><br><span class="line">efficiency = []</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> j <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Number of neurons:&quot;</span>, (j + <span class="number">1</span>) * <span class="number">100</span>)</span><br><span class="line">    input_nodes, hidden_nodes, out_nodes, learn_speed = init_net((j + <span class="number">1</span>) * <span class="number">100</span>)</span><br><span class="line">    w_in2hidden, w_hidden2out = create_net(input_nodes, hidden_nodes, out_nodes)</span><br><span class="line">    w_in2hidden, w_hidden2out = train_set(w_in2hidden, w_hidden2out, learn_speed)</span><br><span class="line">    e_Point=test_set(w_in2hidden, w_hidden2out)</span><br><span class="line">    num_neurons.append((j + <span class="number">1</span>) * <span class="number">100</span>)</span><br><span class="line">    efficiency.append(e_Point)</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">plot_e</span>(<span class="params">num,effency</span>):</span><br><span class="line">    plot.plot(num,effency)</span><br><span class="line">    plot.show()</span><br><span class="line">plot_e(num_neurons,efficiency)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Labs </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Principles of cyber-physical  systems design </tag>
            
        </tags>
      
    </entry>
    
    
  
  
    
    
    <entry>
      <title>关于</title>
      <link href="/about/index.html"/>
      <url>/about/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>comments</title>
      <link href="/comments/index.html"/>
      <url>/comments/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>分类</title>
      <link href="/categories/index.html"/>
      <url>/categories/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>📕日记</title>
      <link href="/diary/index.html"/>
      <url>/diary/index.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="别想偷看啦😡" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="1d189af9d74521c8c5df3b858dd15a25613c649f4b1363e7c69efc06e4da2a5b">10d79030e8222445804370796b90fca14fa1ab634aa3519e51a6b0631ee84ce382fbc75b6b4f52dc267917395f555c17</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">想看需要密码哦😋</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>❤Daily Love</title>
      <link href="/love/index.html"/>
      <url>/love/index.html</url>
      
        <content type="html"><![CDATA[<div class="hbe hbe-container" id="hexo-blog-encrypt" data-wpm="别想偷看啦😡" data-whm="抱歉, 这个文章不能被校验, 不过您还是能看看解密后的内容.">  <script id="hbeData" type="hbeData" data-hmacdigest="b426c21b7805e83bea00bc6798cfaba0b395001d29d969f5027031cb592c5d8e">10d79030e8222445804370796b90fca1d2aa4f99e8f5171f22f450be12c8bdd5</script>  <div class="hbe hbe-content">    <div class="hbe hbe-input hbe-input-xray">      <input class="hbe hbe-input-field hbe-input-field-xray" type="password" id="hbePass">      <label class="hbe hbe-input-label hbe-input-label-xray" for="hbePass">        <span class="hbe hbe-input-label-content hbe-input-label-content-xray">想看需要密码哦😋</span>      </label>      <svg class="hbe hbe-graphic hbe-graphic-xray" width="300%" height="100%" viewBox="0 0 1200 60" preserveAspectRatio="none">        <path d="M0,56.5c0,0,298.666,0,399.333,0C448.336,56.5,513.994,46,597,46c77.327,0,135,10.5,200.999,10.5c95.996,0,402.001,0,402.001,0"></path>        <path d="M0,2.5c0,0,298.666,0,399.333,0C448.336,2.5,513.994,13,597,13c77.327,0,135-10.5,200.999-10.5c95.996,0,402.001,0,402.001,0"></path>      </svg>    </div>  </div></div><script data-pjax src="/lib/hbe.js"></script><link href="/css/hbe.style.css" rel="stylesheet" type="text/css">]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>友链</title>
      <link href="/link/index.html"/>
      <url>/link/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/relax/index.html"/>
      <url>/relax/index.html</url>
      
        <content type="html"><![CDATA[<!DOCTYPE html><html lang="zh"><head>  <meta charset="UTF-8">  <meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1">  <meta name="viewport" content="width=device-width, initial-scale=1.0">  <title>JUST FOR FUN</title>  <link rel="shortcut icon" href="favicon.ico">  <link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:200,400|Montserrat:700" rel="stylesheet">  <link rel="stylesheet" type="text/css" href="css/normalize.css" />  <link rel="stylesheet" type="text/css" href="css/demo.css" />  <script>document.documentElement.className = 'js';</script></head><body class="demo-1"><svg class="hidden">  <symbol id="icon-arrow" viewBox="0 0 24 24">    <title>arrow</title>    <polygon points="6.3,12.8 20.9,12.8 20.9,11.2 6.3,11.2 10.2,7.2 9,6 3.1,12 9,18 10.2,16.8 "/>  </symbol>  <symbol id="icon-drop" viewBox="0 0 24 24">    <title>drop</title>    <path d="M12,21c-3.6,0-6.6-3-6.6-6.6C5.4,11,10.8,4,11.4,3.2C11.6,3.1,11.8,3,12,3s0.4,0.1,0.6,0.3c0.6,0.8,6.1,7.8,6.1,11.2C18.6,18.1,15.6,21,12,21zM12,4.8c-1.8,2.4-5.2,7.4-5.2,9.6c0,2.9,2.3,5.2,5.2,5.2s5.2-2.3,5.2-5.2C17.2,12.2,13.8,7.3,12,4.8z"/><path d="M12,18.2c-0.4,0-0.7-0.3-0.7-0.7s0.3-0.7,0.7-0.7c1.3,0,2.4-1.1,2.4-2.4c0-0.4,0.3-0.7,0.7-0.7c0.4,0,0.7,0.3,0.7,0.7C15.8,16.5,14.1,18.2,12,18.2z"/>  </symbol>  <symbol id="icon-github" viewBox="0 0 32.6 31.8">    <title>github</title>    <path d="M16.3,0C7.3,0,0,7.3,0,16.3c0,7.2,4.7,13.3,11.1,15.5c0.8,0.1,1.1-0.4,1.1-0.8c0-0.4,0-1.4,0-2.8c-4.5,1-5.5-2.2-5.5-2.2c-0.7-1.9-1.8-2.4-1.8-2.4c-1.5-1,0.1-1,0.1-1c1.6,0.1,2.5,1.7,2.5,1.7c1.5,2.5,3.8,1.8,4.7,1.4c0.1-1.1,0.6-1.8,1-2.2c-3.6-0.4-7.4-1.8-7.4-8.1c0-1.8,0.6-3.2,1.7-4.4C7.4,10.7,6.8,9,7.7,6.8c0,0,1.4-0.4,4.5,1.7c1.3-0.4,2.7-0.5,4.1-0.5c1.4,0,2.8,0.2,4.1,0.5c3.1-2.1,4.5-1.7,4.5-1.7c0.9,2.2,0.3,3.9,0.2,4.3c1,1.1,1.7,2.6,1.7,4.4c0,6.3-3.8,7.6-7.4,8c0.6,0.5,1.1,1.5,1.1,3c0,2.2,0,3.9,0,4.5c0,0.4,0.3,0.9,1.1,0.8c6.5-2.2,11.1-8.3,11.1-15.5C32.6,7.3,25.3,0,16.3,0z"/>  </symbol>  <symbol id="icon-keyboard" viewBox="0 0 100 70">    <title>keyboard</title>    <!-- https://thenounproject.com/term/keyboard/783/ by Paul te Kortschot from the Noun Project -->    <path d="M 60.94,1.83 39.22,1.83 C 36.71,1.83 34.67,3.86 34.67,6.376 L 34.67,28.1 C 34.67,30.61 36.71,32.65 39.22,32.65 L 60.94,32.65 C 63.45,32.65 65.5,30.61 65.5,28.1 L 65.5,6.376 C 65.5,3.86 63.45,1.83 60.94,1.83 Z M 44.79,18.63 50.08,11.74 55.37,18.63 Z" opacity="0.2"/>    <path d="M 60.86,36.75 39.14,36.75 C 36.63,36.75 34.59,38.79 34.59,41.3 L 34.59,63.02 C 34.59,65.53 36.63,67.57 39.14,67.57 L 60.86,67.57 C 63.38,67.57 65.41,65.53 65.41,63.02 L 65.41,41.3 C 65.42,38.79 63.38,36.75 60.86,36.75 Z M 50.08,57.45 44.79,50.55 55.37,50.55 Z" opacity="0.2" />    <path d="M 95.45,36.75 73.73,36.75 C 71.22,36.75 69.18,38.79 69.18,41.3 L 69.18,63.02 C 69.18,65.53 71.22,67.57 73.73,67.57 L 95.45,67.57 C 97.97,67.57 100,65.53 100,63.02 L 100,41.3 C 100,38.79 97.97,36.75 95.45,36.75 Z M 83.4,57.45 83.4,46.86 90.3,52.16 Z" />    <path d="M 26.27,36.75 4.55,36.75 C 2.037,36.75 0,38.79 0,41.3 L 0,63.02 C 0,65.53 2.037,67.57 4.55,67.57 L 26.27,67.57 C 28.78,67.57 30.82,65.53 30.82,63.02 L 30.82,41.3 C 30.82,38.79 28.78,36.75 26.27,36.75 Z M 16.69,57.45 9.79,52.16 16.69,46.86 Z" />  </symbol></svg><main class="main main--demo-1">  <div class="content content--fixed">    <header class="codrops-header">      <div class="codrops-links">        <a class="codrops-icon codrops-icon--prev" href="https://lycheee.fun" title="返回主页" ><svg class="icon icon--arrow"><use xlink:href="#icon-arrow"></use></svg></a><!--        <a class="codrops-icon codrops-icon&#45;&#45;drop" href="https://edwiv.com/relax" title="just relax" target="_blank"><svg class="icon icon&#45;&#45;drop"><use xlink:href="#icon-drop"></use></svg></a>-->      </div>      <h1 class="codrops-header__title">I Really Want to Stay at Your House</h1>    </header>    <nav class="demos">      <svg class="icon icon--keyboard"><use xlink:href="#icon-keyboard"></use></svg>      <a class="demo demo--current" href="index1.html"><span>主题 1</span></a>      <a class="demo" href="index2.html"><span>主题 2</span></a><!--      <a class="demo" href="index3.html"><span>主题 3</span></a>--><!--      <a class="demo" href="index4.html"><span>主题 4</span></a>--><!--      <a class="demo" href="index5.html"><span>主题 5</span></a>--><!--      <a class="demo" href="index6.html"><span>主题 6</span></a>-->    </nav>  </div>  <div class="content content--demo-1">    <div class="hamburger js-hover">      <div class="hamburger__line hamburger__line--01">        <div class="hamburger__line-in hamburger__line-in--01"></div>      </div>      <div class="hamburger__line hamburger__line--02">        <div class="hamburger__line-in hamburger__line-in--02"></div>      </div>      <div class="hamburger__line hamburger__line--03">        <div class="hamburger__line-in hamburger__line-in--03"></div>      </div>      <div class="hamburger__line hamburger__line--cross01">        <div class="hamburger__line-in hamburger__line-in--cross01"></div>      </div>      <div class="hamburger__line hamburger__line--cross02">        <div class="hamburger__line-in hamburger__line-in--cross02"></div>      </div>    </div>    <div class="demo-title demo-title--demo-1">JUST FOR FUN</div>    <div class="global-menu">      <div class="global-menu__wrap"><!--        <a class="global-menu__item global-menu__item&#45;&#45;demo-1" href="https://edwiv.com/fun/贪吃蛇/" target="_blank">贪吃蛇</a>--><!--        <a class="global-menu__item global-menu__item&#45;&#45;demo-1" href="https://edwiv.com/fun/水果忍者" target="_blank">水果忍者</a>--><!--        <a class="global-menu__item global-menu__item&#45;&#45;demo-1" href="https://edwiv.com/fun/打方块" target="_blank">打方块</a>--><!--        <a class="global-menu__item global-menu__item&#45;&#45;demo-1" href="https://edwiv.com/fun/俄罗斯方块" target="_blank">俄罗斯方块</a>--><!--        <a class="global-menu__item global-menu__item&#45;&#45;demo-1" href="https://edwiv.com/fun/中国象棋" target="_blank">中国象棋</a>--><!--        <a class="global-menu__item global-menu__item&#45;&#45;demo-1" href="https://edwiv.com/fun//mario/" target="_blank">超级马里奥</a>-->        <a class="global-menu__item global-menu__item--demo-1" href="https://lycheee.fun/relax/五子棋" target="_blank">五子棋</a><!--        <a class="global-menu__item global-menu__item&#45;&#45;demo-1" href="https://edwiv.com/fun/2048/" target="_blank">2048</a>-->      </div>    </div>    <svg class="shape-overlays" viewBox="0 0 100 100" preserveAspectRatio="none">      <path class="shape-overlays__path"></path>      <path class="shape-overlays__path"></path>      <path class="shape-overlays__path"></path>    </svg>  </div></main><script src="js/demo.js"></script><script src="js/easings.js"></script><script src="js/demo1.js"></script></body></html>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/relax/index2.html"/>
      <url>/relax/index2.html</url>
      
        <content type="html"><![CDATA[<!DOCTYPE html><html lang="zh"><head><meta charset="UTF-8"><meta http-equiv="X-UA-Compatible" content="IE=edge,chrome=1"> <meta name="viewport" content="width=device-width, initial-scale=1.0"><title>JUST FOR FUN</title><link rel="shortcut icon" href="favicon.ico"><link href="https://fonts.googleapis.com/css?family=Source+Sans+Pro:200,400" rel="stylesheet"><link rel="stylesheet" type="text/css" href="css/normalize.css" /><link rel="stylesheet" type="text/css" href="css/demo.css" /><script>document.documentElement.className = 'js';</script></head><body class="demo-2"><svg class="hidden"><symbol id="icon-arrow" viewBox="0 0 24 24"><title>arrow</title><polygon points="6.3,12.8 20.9,12.8 20.9,11.2 6.3,11.2 10.2,7.2 9,6 3.1,12 9,18 10.2,16.8 "/></symbol><symbol id="icon-drop" viewBox="0 0 24 24"><title>drop</title><path d="M12,21c-3.6,0-6.6-3-6.6-6.6C5.4,11,10.8,4,11.4,3.2C11.6,3.1,11.8,3,12,3s0.4,0.1,0.6,0.3c0.6,0.8,6.1,7.8,6.1,11.2C18.6,18.1,15.6,21,12,21zM12,4.8c-1.8,2.4-5.2,7.4-5.2,9.6c0,2.9,2.3,5.2,5.2,5.2s5.2-2.3,5.2-5.2C17.2,12.2,13.8,7.3,12,4.8z"/><path d="M12,18.2c-0.4,0-0.7-0.3-0.7-0.7s0.3-0.7,0.7-0.7c1.3,0,2.4-1.1,2.4-2.4c0-0.4,0.3-0.7,0.7-0.7c0.4,0,0.7,0.3,0.7,0.7C15.8,16.5,14.1,18.2,12,18.2z"/></symbol><symbol id="icon-github" viewBox="0 0 32.6 31.8"><title>github</title><path d="M16.3,0C7.3,0,0,7.3,0,16.3c0,7.2,4.7,13.3,11.1,15.5c0.8,0.1,1.1-0.4,1.1-0.8c0-0.4,0-1.4,0-2.8c-4.5,1-5.5-2.2-5.5-2.2c-0.7-1.9-1.8-2.4-1.8-2.4c-1.5-1,0.1-1,0.1-1c1.6,0.1,2.5,1.7,2.5,1.7c1.5,2.5,3.8,1.8,4.7,1.4c0.1-1.1,0.6-1.8,1-2.2c-3.6-0.4-7.4-1.8-7.4-8.1c0-1.8,0.6-3.2,1.7-4.4C7.4,10.7,6.8,9,7.7,6.8c0,0,1.4-0.4,4.5,1.7c1.3-0.4,2.7-0.5,4.1-0.5c1.4,0,2.8,0.2,4.1,0.5c3.1-2.1,4.5-1.7,4.5-1.7c0.9,2.2,0.3,3.9,0.2,4.3c1,1.1,1.7,2.6,1.7,4.4c0,6.3-3.8,7.6-7.4,8c0.6,0.5,1.1,1.5,1.1,3c0,2.2,0,3.9,0,4.5c0,0.4,0.3,0.9,1.1,0.8c6.5-2.2,11.1-8.3,11.1-15.5C32.6,7.3,25.3,0,16.3,0z"/></symbol><symbol id="icon-keyboard" viewBox="0 0 100 70"><title>keyboard</title><!-- https://thenounproject.com/term/keyboard/783/ by Paul te Kortschot from the Noun Project --><path d="M 60.94,1.83 39.22,1.83 C 36.71,1.83 34.67,3.86 34.67,6.376 L 34.67,28.1 C 34.67,30.61 36.71,32.65 39.22,32.65 L 60.94,32.65 C 63.45,32.65 65.5,30.61 65.5,28.1 L 65.5,6.376 C 65.5,3.86 63.45,1.83 60.94,1.83 Z M 44.79,18.63 50.08,11.74 55.37,18.63 Z" opacity="0.2"/><path d="M 60.86,36.75 39.14,36.75 C 36.63,36.75 34.59,38.79 34.59,41.3 L 34.59,63.02 C 34.59,65.53 36.63,67.57 39.14,67.57 L 60.86,67.57 C 63.38,67.57 65.41,65.53 65.41,63.02 L 65.41,41.3 C 65.42,38.79 63.38,36.75 60.86,36.75 Z M 50.08,57.45 44.79,50.55 55.37,50.55 Z" opacity="0.2" /><path d="M 95.45,36.75 73.73,36.75 C 71.22,36.75 69.18,38.79 69.18,41.3 L 69.18,63.02 C 69.18,65.53 71.22,67.57 73.73,67.57 L 95.45,67.57 C 97.97,67.57 100,65.53 100,63.02 L 100,41.3 C 100,38.79 97.97,36.75 95.45,36.75 Z M 83.4,57.45 83.4,46.86 90.3,52.16 Z" /><path d="M 26.27,36.75 4.55,36.75 C 2.037,36.75 0,38.79 0,41.3 L 0,63.02 C 0,65.53 2.037,67.57 4.55,67.57 L 26.27,67.57 C 28.78,67.57 30.82,65.53 30.82,63.02 L 30.82,41.3 C 30.82,38.79 28.78,36.75 26.27,36.75 Z M 16.69,57.45 9.79,52.16 16.69,46.86 Z" /></symbol></svg><main class="main main--demo-2"><div class="content content--fixed"><header class="codrops-header"><div class="codrops-links"><a class="codrops-icon codrops-icon--prev" href="https://lycheee.fun" title="返回主页" ><svg class="icon icon--arrow"><use xlink:href="#icon-arrow"></use></svg></a><!--<a class="codrops-icon codrops-icon&#45;&#45;drop" href="https://edwiv.com/relax" title="just relax" target="_blank"><svg class="icon icon&#45;&#45;drop"><use xlink:href="#icon-drop"></use></svg></a>--></div><h1 class="codrops-header__title">I Really Want to Stay at Your House</h1></header><nav class="demos"><svg class="icon icon--keyboard"><use xlink:href="#icon-keyboard"></use></svg><a class="demo" href="index.html"><span>主题 1</span></a><a class="demo demo--current" href="index2.html"><span>主题 2</span></a><!--<a class="demo" href="index3.html"><span>主题 3</span></a>--><!--<a class="demo" href="index4.html"><span>主题 4</span></a>--><!--<a class="demo" href="index5.html"><span>主题 5</span></a>--><!--<a class="demo" href="index6.html"><span>主题 6</span></a>--><!--</nav>--></div><div class="content content--demo-2"><div class="hamburger js-hover"><div class="hamburger__line hamburger__line--01"><div class="hamburger__line-in hamburger__line-in--01"></div></div><div class="hamburger__line hamburger__line--02"><div class="hamburger__line-in hamburger__line-in--02"></div></div><div class="hamburger__line hamburger__line--03"><div class="hamburger__line-in hamburger__line-in--03"></div></div><div class="hamburger__line hamburger__line--cross01"><div class="hamburger__line-in hamburger__line-in--cross01"></div></div><div class="hamburger__line hamburger__line--cross02"><div class="hamburger__line-in hamburger__line-in--cross02"></div></div></div><div class="demo-title demo-title--demo-2">JUST FOR FUN</div><div class="global-menu"><div class="global-menu__wrap"><!--<a class="global-menu__item global-menu__item&#45;&#45;demo-2" href="https://edwiv.com/fun/贪吃蛇/" target="_blank">贪吃蛇</a>--><!--<a class="global-menu__item global-menu__item&#45;&#45;demo-2" href="https://edwiv.com/fun/水果忍者" target="_blank">水果忍者</a>--><!--<a class="global-menu__item global-menu__item&#45;&#45;demo-2" href="https://edwiv.com/fun/打方块" target="_blank">打方块</a>--><!--<a class="global-menu__item global-menu__item&#45;&#45;demo-2" href="https://edwiv.com/fun/俄罗斯方块" target="_blank">俄罗斯方块</a>--><!--<a class="global-menu__item global-menu__item&#45;&#45;demo-2" href="https://edwiv.com/fun/中国象棋" target="_blank">中国象棋</a>--><!--<a class="global-menu__item global-menu__item&#45;&#45;demo-2" href="https://edwiv.com/fun//mario/" target="_blank">超级马里奥</a>--><a class="global-menu__item global-menu__item--demo-1" href="https://lycheee.fun/relax/五子棋" target="_blank">五子棋</a><!--<a class="global-menu__item global-menu__item&#45;&#45;demo-2" href="https://edwiv.com/fun/2048/" target="_blank">2048</a>--></div></div><svg class="shape-overlays" viewBox="0 0 100 100" preserveAspectRatio="none"><path class="shape-overlays__path"></path><path class="shape-overlays__path"></path><path class="shape-overlays__path"></path><path class="shape-overlays__path"></path></svg></div></main><script src="js/demo.js"></script><script src="js/easings.js"></script><script src="js/demo2.js"></script></body></html>]]></content>
      
    </entry>
    
    
    
    <entry>
      <title>标签</title>
      <link href="/tags/index.html"/>
      <url>/tags/index.html</url>
      
        <content type="html"><![CDATA[]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/relax/css/demo.css"/>
      <url>/relax/css/demo.css</url>
      
        <content type="html"><![CDATA[*,*::after,*::before {box-sizing: border-box;}html {background: #000;}body {font-family: 'Source Sans Pro', Avenir, 'Helvetica Neue', Helvetica, Arial, sans-serif;min-height: 100vh;color: #57585c;color: var(--color-text);background-color: #fff;background-color: var(--color-bg);-webkit-font-smoothing: antialiased;-moz-osx-font-smoothing: grayscale;}/* Color schemes */.demo-1 {--color-text: #fff;--color-bg: #ddd;--color-link: #fff;--color-link-hover: #2735da;--color-info: #fff;--color-main-bg: #171619;--path-fill-1: #413f46;--path-fill-2: #e6e5ea;--path-fill-3: #cccccc;--color-title: #fff;--font-family-title: 'WingDings', fantasy;--font-size-title: 7vmax;--font-weight-title: 700;--color-menu: #171616;--color-menu-hover: #ffffff;--font-family-menu: 'Montserrat', sans-serif;--font-size-menu: 3vmax;--font-weight-menu: 700;--button-bg: #fff;--button-circle: #6b6b6b;--button-line: #222;}.demo-2 {--color-text: #fff;--color-bg: #333;--color-link: #fff;--color-link-hover: #f44e5e;--color-info: #fff;--color-main-bg: #8b00ff;--path-fill-1: #dce3f1;--path-fill-2: #869ccc;--path-fill-3: #30436f;--path-fill-4: #0d1831;--color-title: #fff;--font-family-title: 'Comic Sans MS', cursive;--font-size-title: 6vmax;--font-weight-title: 200;--color-menu: #fff;--color-menu-hover: #fff;--font-family-menu: 'Comic Sans MS', cursive;--font-size-menu: 3vmax;--font-weight-menu: 200;--button-bg: #fff;--button-circle: #fff;--button-line: #222;}.demo-3 {--color-text: #fbd54a;--color-bg: #333;--color-link: #4d4f5f;--color-link-hover: #bfb5b5;--color-info: #fff;--color-main-bg: #24262d;--path-fill-1: #000000;--path-fill-2: #1d1d1f;--path-fill-3: #fbd54a;--color-title: #fff;--font-family-title: 'Arapey', serif;--font-size-title: 5vmax;--font-weight-title: 400;--color-menu: #000000;--color-menu-hover: #fff;--font-family-menu: 'Arapey', serif;--font-size-menu: 3vmax;--font-weight-menu: 400;--button-bg: #fff;--button-circle: #ada4a4;--button-line: #222;}.demo-4 {--color-text: #fff;--color-bg: #333;--color-link: #1b198c;--color-link-hover: #d3eaa2;--color-info: #fff;--color-main-bg: #3735d0;--path-fill-1: #241e84;--path-fill-2: #d3eaa2;--color-title: #fff;--font-family-title: 'Pompiere', serif;--font-size-title: 6vmax;--font-weight-title: 300;--color-menu: #3735d0;--color-menu-hover: #b2dc53;--font-family-menu: var(--font-family-title);--font-size-menu: 4vmax;--font-weight-menu: 300;--button-bg: #b3dc53;--button-circle: #1b198b;--button-line: #fff;}.demo-5 {--color-text: #c04444;--color-bg: #333;--color-link: #2d2c2b;--color-link-hover: #c14343;--color-info: #fff;--color-main-bg: #ece7de;--path-fill-1: #c04444;--path-fill-2: #1b1a19;--color-title: inherit;--font-family-title: 'Playfair Display', serif;--font-size-title: 6vmax;--font-weight-title: 700;--color-menu: #ffffff;--color-menu-hover: #c14343;--font-family-menu: var(--font-family-title);--font-size-menu: 3.5vmax;--font-weight-menu: 400;--button-bg: #fff;--button-circle: #c14343;--button-line: #2d2c2b;}.demo-6 {--color-text: #120047;--color-bg: #333;--color-link: #110046;--color-link-hover: #e83779;--color-info: #fff;--color-main-bg: #7115d8;--path-fill-1: url(#gradient1);--path-fill-2: url(#gradient2);--path-fill-3: url(#gradient3);--color-title: inherit;--font-family-title: 'Rozha One', serif;--font-size-title: 8vmax;--font-weight-title: 400;--color-menu: #ffffff;--color-menu-hover: #c14343;--font-family-menu: var(--font-family-title);--font-size-menu: 3.5vmax;--font-weight-menu: 400;--button-bg: #120047;--button-circle: #9236f7;--button-line: #ffffff;}/* Fade effect */.js body {opacity: 0;transition: opacity 0.3s;}.js body.render {opacity: 1;}a {text-decoration: none;color: #5d93d8;color: var(--color-link);outline: none;}a:hover,a:focus {color: #423c2b;color: var(--color-link-hover);outline: none;}.hidden {position: absolute;overflow: hidden;width: 0;height: 0;pointer-events: none;}/* Icons */.icon {display: block;width: 1.5em;height: 1.5em;margin: 0 auto;fill: currentColor;}.icon--keyboard {display: none;}main {position: relative;width: 100%;min-height: 100vh;background-color: var(--color-main-bg);}.content {position: relative;display: flex;justify-content: center;align-items: center;min-height: 100vh;margin: 0 auto;pointer-events: none;}.content--fixed {position: fixed;top: 0;left: 0;display: grid;align-content: space-between;width: 100%;max-width: none;min-height: 0;height: 100vh;padding: 1.5em;grid-template-columns: 50% 50%;grid-template-rows: auto auto 4em;grid-template-areas: 'header ...''... ...''github demos';}.content--fixed a {pointer-events: auto;}/* Header */.codrops-header {position: relative;z-index: 100;display: flex;flex-direction: row;align-items: flex-start;align-items: center;align-self: start;grid-area: header;justify-self: start;}.codrops-header__title {font-size: 22px;font-weight: bold;margin: 0;padding: 0.75em 0;}.info {margin: 0 0 0 1.25em;font-style: italic;color: var(--color-info);font-weight: bold;}.github {display: block;align-self: end;grid-area: github;justify-self: start;margin: 0.5em;}.demos {position: relative;display: block;align-self: end;text-align: center;grid-area: demos;margin-bottom: 0.5em;}.demo {margin: 0 0.15em;}.demo:hover,.demo:focus {opacity: 0.5;}.demo span {white-space: nowrap;text-transform: lowercase;pointer-events: none;}.demo span::before {content: '#';}a.demo--current {pointer-events: none;}/* Top Navigation Style */.codrops-links {position: relative;display: flex;justify-content: center;margin: 0 22px 0 0;text-align: center;white-space: nowrap;}.codrops-icon {display: inline-block;margin: 0.15em;padding: 0.25em;}.demo-title {color: var(--color-title);font-family: var(--font-family-title);font-size: var(--font-size-title);font-weight: var(--font-weight-title);}.global-menu {width: 100vw;height: 90vh;display: flex;justify-content: center;align-items: center;position: fixed;top: 0;left: 0;pointer-events: none;z-index: 100;}.demo-5 .global-menu {text-align: center;}.global-menu__item {color: var(--color-menu);font-family: var(--font-family-menu);font-size: var(--font-size-menu);font-weight: var(--font-weight-menu);opacity: 0;transform: translateY(-100%);pointer-events: none;display: block;margin: 0.25em 0;transition: transform 0.3s, opacity 0.3s;transition-timing-function: ease-in;}.global-menu__item--demo-2:nth-child(odd) {transform: translateY(-100%) rotate(10deg);}.global-menu__item--demo-2:nth-child(even) {transform: translateY(-100%) rotate(-10deg);}.global-menu__item--demo-3 {transition: transform 0.1s, opacity 0.1s;transform: translateY(100%);transition-timing-function: ease-out;}.global-menu__item--demo-4,.global-menu__item--demo-5 {transition: transform 0.1s, opacity 0.1s;transition-timing-function: ease-out;}.global-menu__item--demo-4 {transform: translateX(40%);}.global-menu__item--demo-5:nth-child(odd) {transform: translateX(100%) rotate(10deg) scale(0.5);}.global-menu__item--demo-5:nth-child(even) {transform: translateX(100%) rotate(-10deg) scale(0.5);}.global-menu__item--demo-6 {transform: translateY(100%);}.global-menu__item:hover {color: var(--color-menu-hover);}.global-menu__item.is-opened {opacity: 1;transform: translateY(0) rotate(0);pointer-events: auto;transition-timing-function: ease;}.global-menu__item--demo-4.is-opened,.global-menu__item--demo-5.is-opened {transform: translateX(0) rotate(0);}.global-menu__item--demo-4.is-opened {transition-timing-function: cubic-bezier(0.230, 1.000, 0.355, 1.400);}.global-menu__item:nth-of-type(1) {transition-delay: 0s;}.global-menu__item.is-opened:nth-of-type(1) {transition-delay: 0.85s;}.global-menu__item:nth-of-type(2) {transition-delay: 0.05s;}.global-menu__item.is-opened:nth-of-type(2) {transition-delay: 0.8s;}.global-menu__item:nth-of-type(3) {transition-delay: 0.1s;}.global-menu__item.is-opened:nth-of-type(3) {transition-delay: 0.75s;}.global-menu__item:nth-of-type(4) {transition-delay: 0.15s;}.global-menu__item.is-opened:nth-of-type(4) {transition-delay: 0.6s;}.global-menu__item:nth-of-type(5) {transition-delay: 0.20s;}.global-menu__item.is-opened:nth-of-type(5) {transition-delay: 0.55s;}.global-menu__item:nth-of-type(6) {transition-delay: 0.25s;}.global-menu__item.is-opened:nth-of-type(6) {transition-delay: 0.45s;}.global-menu__item:nth-of-type(7) {transition-delay: 0.35s;}.global-menu__item.is-opened:nth-of-type(7) {transition-delay: 0.45s;}.global-menu__item:nth-of-type(8) {transition-delay: 0.35s;}.global-menu__item.is-opened:nth-of-type(8) {transition-delay: 0.45s;}/* demo 2 */.global-menu__item--demo-2:nth-of-type(1) {transition-delay: 0s;}.global-menu__item--demo-2.is-opened:nth-of-type(1) {transition-delay: 0.85s;}.global-menu__item--demo-2:nth-of-type(2) {transition-delay: 0.05s;}.global-menu__item--demo-2.is-opened:nth-of-type(2) {transition-delay: 0.8s;}.global-menu__item--demo-2:nth-of-type(3) {transition-delay: 0.1s;}.global-menu__item--demo-2.is-opened:nth-of-type(3) {transition-delay: 0.75s;}.global-menu__item--demo-2:nth-of-type(4) {transition-delay: 0.15s;}.global-menu__item--demo-2.is-opened:nth-of-type(4) {transition-delay: 0.7s;}/* demo 3 */.global-menu__item--demo-3.is-opened {transition-duration: 0.3s;}.global-menu__item--demo-3:nth-of-type(1) {transition-delay: 0s;}.global-menu__item--demo-3.is-opened:nth-of-type(1) {transition-delay: 0.65s;}.global-menu__item--demo-3:nth-of-type(2) {transition-delay: 0s;}.global-menu__item--demo-3.is-opened:nth-of-type(2) {transition-delay: 0.7s;}.global-menu__item--demo-3:nth-of-type(3) {transition-delay: 0s;}.global-menu__item--demo-3.is-opened:nth-of-type(3) {transition-delay: 0.75s;}.global-menu__item--demo-3:nth-of-type(4) {transition-delay: 0s;}.global-menu__item--demo-3.is-opened:nth-of-type(4) {transition-delay: 0.8s;}.global-menu__item--demo-3:nth-of-type(5) {transition-delay: 0s;}.global-menu__item--demo-3.is-opened:nth-of-type(5) {transition-delay: 0.85s;}.global-menu__item--demo-3:nth-of-type(6) {transition-delay: 0s;}.global-menu__item--demo-3.is-opened:nth-of-type(6) {transition-delay: 0.9s;}.global-menu__item--demo-3:nth-of-type(7) {transition-delay: 0s;}.global-menu__item--demo-3.is-opened:nth-of-type(7) {transition-delay: 0.95s;}.global-menu__item--demo-3:nth-of-type(8) {transition-delay: 0s;}.global-menu__item--demo-3.is-opened:nth-of-type(8) {transition-delay: 1s;}/* demo 4 */.global-menu__item--demo-4.is-opened {transition-duration: 0.6s;}.global-menu__item--demo-4:nth-of-type(1) {transition-delay: 0s;}.global-menu__item--demo-4.is-opened:nth-of-type(1) {transition-delay: 0.45s;}.global-menu__item--demo-4:nth-of-type(2) {transition-delay: 0.05s;}.global-menu__item--demo-4.is-opened:nth-of-type(2) {transition-delay: 0.5s;}.global-menu__item--demo-4:nth-of-type(3) {transition-delay: 0.1s;}.global-menu__item--demo-4.is-opened:nth-of-type(3) {transition-delay: 0.55s;}.global-menu__item--demo-4:nth-of-type(4) {transition-delay: 0.15s;}.global-menu__item--demo-4.is-opened:nth-of-type(4) {transition-delay: 0.6s;}.global-menu__item--demo-4:nth-of-type(5) {transition-delay: 0.2s;}.global-menu__item--demo-4.is-opened:nth-of-type(5) {transition-delay: 0.65s;}.global-menu__item--demo-4:nth-of-type(6) {transition-delay: 0.25s;}.global-menu__item--demo-4.is-opened:nth-of-type(6) {transition-delay: 0.7s;}.global-menu__item--demo-4:nth-of-type(7) {transition-delay: 0.3s;}.global-menu__item--demo-4.is-opened:nth-of-type(7) {transition-delay: 0.75s;}.global-menu__item--demo-4:nth-of-type(8) {transition-delay: 0.35s;}.global-menu__item--demo-4.is-opened:nth-of-type(8) {transition-delay: 0.8s;}/* demo 5 */.global-menu__item--demo-5.is-opened {transition-duration: 0.4s;}.global-menu__item--demo-5:nth-of-type(1) {transition-delay: 0s;}.global-menu__item--demo-5.is-opened:nth-of-type(1) {transition-delay: 0.55s;}.global-menu__item--demo-5:nth-of-type(2) {transition-delay: 0.05s;}.global-menu__item--demo-5.is-opened:nth-of-type(2) {transition-delay: 0.6s;}.global-menu__item--demo-5:nth-of-type(3) {transition-delay: 0.1s;}.global-menu__item--demo-5.is-opened:nth-of-type(3) {transition-delay: 0.65s;}.global-menu__item--demo-5:nth-of-type(4) {transition-delay: 0.15s;}.global-menu__item--demo-5.is-opened:nth-of-type(4) {transition-delay: 0.7s;}.global-menu__item--demo-5:nth-of-type(5) {transition-delay: 0.2s;}.global-menu__item--demo-5.is-opened:nth-of-type(5) {transition-delay: 0.75s;}.global-menu__item--demo-5:nth-of-type(6) {transition-delay: 0.25s;}.global-menu__item--demo-5.is-opened:nth-of-type(6) {transition-delay: 0.8s;}.global-menu__item--demo-5:nth-of-type(7) {transition-delay: 0.3s;}.global-menu__item--demo-5.is-opened:nth-of-type(7) {transition-delay: 0.85s;}.global-menu__item--demo-5:nth-of-type(8) {transition-delay: 0.35s;}.global-menu__item--demo-5.is-opened:nth-of-type(8) {transition-delay: 0.9s;}/* demo 6 */.global-menu__item--demo-6.is-opened {transition-duration: 0.8s;}.global-menu__item--demo-6:nth-of-type(1) {transition-delay: 0.25s;}.global-menu__item--demo-6.is-opened:nth-of-type(1) {transition-delay: 1s;}.global-menu__item--demo-6:nth-of-type(2) {transition-delay: 0.2s;}.global-menu__item--demo-6.is-opened:nth-of-type(2) {transition-delay: 1.1s;}.global-menu__item--demo-6:nth-of-type(3) {transition-delay: 0.15s;}.global-menu__item--demo-6.is-opened:nth-of-type(3) {transition-delay: 1.2s;}.global-menu__item--demo-6:nth-of-type(4) {transition-delay: 0.1s;}.global-menu__item--demo-6.is-opened:nth-of-type(4) {transition-delay: 1.3s;}.global-menu__item--demo-6:nth-of-type(5) {transition-delay: 0.1s;}.global-menu__item--demo-6.is-opened:nth-of-type(5) {transition-delay: 1.4s;}.global-menu__item--demo-6:nth-of-type(6) {transition-delay: 0.05s;}.global-menu__item--demo-6.is-opened:nth-of-type(6) {transition-delay: 1.5s;}.global-menu__item--demo-6:nth-of-type(7) {transition-delay: 0.03s;}.global-menu__item--demo-6.is-opened:nth-of-type(7) {transition-delay: 1.6s;}.global-menu__item--demo-6:nth-of-type(8) {transition-delay: 0.02s;}.global-menu__item--demo-6.is-opened:nth-of-type(8) {transition-delay: 1.65s;}.shape-overlays {width: 100vw;height: 100vh;pointer-events: none;position: fixed;top: 0;left: 0;}.shape-overlays.is-opened {pointer-events: auto;}.shape-overlays__path:nth-of-type(1) {fill: var(--path-fill-1);}.shape-overlays__path:nth-of-type(2) {fill: var(--path-fill-2);}.shape-overlays__path:nth-of-type(3) {fill: var(--path-fill-3);}.shape-overlays__path:nth-of-type(4) {fill: var(--path-fill-4);}@-webkit-keyframes intervalHamburgerBorder {0% {opacity: 1;-webkit-transform: scale(1);transform: scale(1);}80% {-webkit-transform: scale(1.6);transform: scale(1.6);}100% {opacity: 0;-webkit-transform: scale(1.6);transform: scale(1.6);}}@keyframes intervalHamburgerBorder {0% {opacity: 1;-webkit-transform: scale(1);transform: scale(1);}80% {-webkit-transform: scale(1.6);transform: scale(1.6);}100% {opacity: 0;-webkit-transform: scale(1.6);transform: scale(1.6);}}.hamburger {width: 64px;height: 64px;display: block;position: relative;cursor: pointer;position: absolute;top: 2.25em;right: 2.25em;z-index: 110;border-radius: 50%;background-color: var(--button-bg);pointer-events: auto;-webkit-tap-highlight-color: rgba(0,0,0,0);}.hamburger::after {width: 64px;height: 64px;box-sizing: border-box;content: '';display: block;position: absolute;top: 0;left: 0;pointer-events: none;border: 4px solid var(--button-circle);border-radius: 50%;-webkit-animation-duration: 1.2s;animation-duration: 1.2s;-webkit-animation-name: intervalHamburgerBorder;animation-name: intervalHamburgerBorder;-webkit-animation-iteration-count: infinite;animation-iteration-count: infinite;}.hamburger__line {width: 28px;height: 2px;overflow: hidden;position: absolute;z-index: 10;}.hamburger__line-in {width: 84px;height: 2px;position: absolute;top: 0;left: 0;}.hamburger__line-in::before,.hamburger__line-in::after {width: 28px;height: 2px;content: '';display: block;position: absolute;top: 0;background-color: var(--button-line);}.hamburger__line-in::before {left: -56px;}.hamburger__line-in::after {left: 0;}.hamburger__line--01,.hamburger__line--02,.hamburger__line--03,.hamburger__line--cross01,.hamburger__line--cross02 {left: 18px;}.hamburger__line--01 {top: 24.6px;}.hamburger__line--02,.hamburger__line--cross01,.hamburger__line--cross02 {top: 31px;}.hamburger__line--03 {top: 37.4px;}.hamburger__line--cross01 {-webkit-transform: rotate(45deg);transform: rotate(45deg);}.hamburger__line--cross02 {-webkit-transform: rotate(-45deg);transform: rotate(-45deg);}.hamburger__line {-webkit-transition-duration: 0.6s;transition-duration: 0.6s;-webkit-transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1);transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1);}.hamburger__line-in {-webkit-transition-duration: 0.6s;transition-duration: 0.6s;-webkit-transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1);transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1);}.hamburger__line-in::before,.hamburger__line-in::after {-webkit-transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1);transition-timing-function: cubic-bezier(0.19, 1, 0.22, 1);-webkit-transition-property: -webkit-transform;transition-property: -webkit-transform;transition-property: transform;transition-property: transform, -webkit-transform;}.hamburger__line-in--cross01,.hamburger__line-in--cross02 {-webkit-transform: translateX(-33.3%);transform: translateX(-33.3%);}.hamburger__line-in--01 {-webkit-transition-delay: 0.2s;transition-delay: 0.2s;}.hamburger__line-in--02 {-webkit-transition-delay: 0.25s;transition-delay: 0.25s;}.hamburger__line-in--02::before,.hamburger__line-in--02::after {-webkit-transition-delay: 0.05s;transition-delay: 0.05s;}.hamburger__line-in--03 {-webkit-transition-delay: 0.3s;transition-delay: 0.3s;}.hamburger__line-in--03::before,.hamburger__line-in--03::after {-webkit-transition-delay: 0.1s;transition-delay: 0.1s;}.hamburger__line-in--cross01 {-webkit-transition-delay: 0.0s;transition-delay: 0.0s;}.hamburger__line-in--cross02 {-webkit-transition-delay: 0.05s;transition-delay: 0.05s;}.hamburger__line-in--cross02::before,.hamburger__line-in--cross02::after {-webkit-transition-delay: 0.1s;transition-delay: 0.1s;}.hamburger.is-opened-navi .hamburger__line-in--01,.hamburger.is-opened-navi .hamburger__line-in--02,.hamburger.is-opened-navi .hamburger__line-in--03 {-webkit-transform: translateX(33.3%);transform: translateX(33.3%);}.hamburger.is-opened-navi .hamburger__line-in--cross01,.hamburger.is-opened-navi .hamburger__line-in--cross02 {-webkit-transform: translateX(0);transform: translateX(0);}.hamburger.is-opened-navi .hamburger__line-in--01 {-webkit-transition-delay: 0s;transition-delay: 0s;}.hamburger.is-opened-navi .hamburger__line-in--02 {-webkit-transition-delay: 0.05s;transition-delay: 0.05s;}.hamburger.is-opened-navi .hamburger__line-in--03 {-webkit-transition-delay: 0.1s;transition-delay: 0.1s;}.hamburger.is-opened-navi .hamburger__line-in--cross01 {-webkit-transition-delay: 0.25s;transition-delay: 0.25s;}.hamburger.is-opened-navi .hamburger__line-in--cross02 {-webkit-transition-delay: 0.3s;transition-delay: 0.3s;}.hamburger:hover .hamburger__line-in::before,.hamburger:hover .hamburger__line-in::after {-webkit-transform: translateX(200%);transform: translateX(200%);}.hamburger:hover .hamburger__line-in--01::before,.hamburger:hover .hamburger__line-in--01::after,.hamburger:hover .hamburger__line-in--02::before,.hamburger:hover .hamburger__line-in--02::after,.hamburger:hover .hamburger__line-in--03::before,.hamburger:hover .hamburger__line-in--03::after {-webkit-transition-duration: 1s;transition-duration: 1s;}.hamburger:hover .hamburger__line-in--cross01::before,.hamburger:hover .hamburger__line-in--cross01::after,.hamburger:hover .hamburger__line-in--cross02::before,.hamburger:hover .hamburger__line-in--cross02::after {-webkit-transition-duration: 0s;transition-duration: 0s;}.hamburger.is-opened-navi:hover .hamburger__line-in--cross01::before,.hamburger.is-opened-navi:hover .hamburger__line-in--cross01::after,.hamburger.is-opened-navi:hover .hamburger__line-in--cross02::before,.hamburger.is-opened-navi:hover .hamburger__line-in--cross02::after {-webkit-transition-duration: 1s;transition-duration: 1s;}.hamburger.is-opened-navi:hover .hamburger__line-in--01::before,.hamburger.is-opened-navi:hover .hamburger__line-in--01::after,.hamburger.is-opened-navi:hover .hamburger__line-in--02::before,.hamburger.is-opened-navi:hover .hamburger__line-in--02::after,.hamburger.is-opened-navi:hover .hamburger__line-in--03::before,.hamburger.is-opened-navi:hover .hamburger__line-in--03::after {-webkit-transition-duration: 0s;transition-duration: 0s;}@media screen and (min-width: 55em) {.icon--keyboard {position: absolute;right: 0.55em;bottom: -30%;display: block;width: 54px;height: 46px;fill: var(--color-link);}.demos {display: flex;padding-right: 80px;justify-self: end;}.demo {display: block;width: 17px;height: 17px;margin: 0 4px;border-radius: 50%;background: var(--color-link);}a.demo--current {background: var(--color-link-hover);}.demo span {position: absolute;line-height: 1;right: 100%;display: none;margin: 0 1em 0 0;}.demo--current span {display: block;}}@media screen and (max-width: 55em) {html,body {overflow-x: hidden;width: 100vw;height: 100%;}.hamburger {position: fixed;top: 0.5em;right: 0.5em;transform: scale(0.75);}.content {height: auto;min-height: 0;padding-bottom: 10em;flex-direction: column;}.content--fixed {position: relative;z-index: 0;display: block;padding: 0.85em;}.codrops-header {flex-direction: column;align-items: center;}.codrops-header__title {font-weight: bold;padding-bottom: 0.25em;text-align: center;}.github {display: block;margin: 1em auto;}.codrops-links {margin: 0;}}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/relax/css/normalize.css"/>
      <url>/relax/css/normalize.css</url>
      
        <content type="html"><![CDATA[article,aside,details,figcaption,figure,footer,header,hgroup,main,nav,section,summary{display:block;}audio,canvas,video{display:inline-block;}audio:not([controls]){display:none;height:0;}[hidden]{display:none;}html{font-family:sans-serif;-ms-text-size-adjust:100%;-webkit-text-size-adjust:100%;}body{margin:0;}a:focus{outline:thin dotted;}a:active,a:hover{outline:0;}h1{font-size:2em;margin:0.67em 0;}abbr[title]{border-bottom:1px dotted;}b,strong{font-weight:bold;}dfn{font-style:italic;}hr{-moz-box-sizing:content-box;box-sizing:content-box;height:0;}mark{background:#ff0;color:#000;}code,kbd,pre,samp{font-family:monospace,serif;font-size:1em;}pre{white-space:pre-wrap;}q{quotes:"\201C" "\201D" "\2018" "\2019";}small{font-size:80%;}sub,sup{font-size:75%;line-height:0;position:relative;vertical-align:baseline;}sup{top:-0.5em;}sub{bottom:-0.25em;}img{border:0;}svg:not(:root){overflow:hidden;}figure{margin:0;}fieldset{border:1px solid #c0c0c0;margin:0 2px;padding:0.35em 0.625em 0.75em;}legend{border:0;padding:0;}button,input,select,textarea{font-family:inherit;font-size:100%;margin:0;}button,input{line-height:normal;}button,select{text-transform:none;}button,html input[type="button"],input[type="reset"],input[type="submit"]{-webkit-appearance:button;cursor:pointer;}button[disabled],html input[disabled]{cursor:default;}input[type="checkbox"],input[type="radio"]{box-sizing:border-box;padding:0;}input[type="search"]{-webkit-appearance:textfield;-moz-box-sizing:content-box;-webkit-box-sizing:content-box;box-sizing:content-box;}input[type="search"]::-webkit-search-cancel-button,input[type="search"]::-webkit-search-decoration{-webkit-appearance:none;}button::-moz-focus-inner,input::-moz-focus-inner{border:0;padding:0;}textarea{overflow:auto;vertical-align:top;}table{border-collapse:collapse;border-spacing:0;}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/relax/js/demo2.js"/>
      <url>/relax/js/demo2.js</url>
      
        <content type="html"><![CDATA[class ShapeOverlays {  constructor(elm) {    this.elm = elm;    this.path = elm.querySelectorAll('path');    this.numPoints = 4;    this.duration = 800;    this.delayPointsArray = [];    this.delayPointsMax = 180;    this.delayPerPath = 70;    this.timeStart = Date.now();    this.isOpened = false;    this.isAnimating = false;  }  toggle() {    this.isAnimating = true;    const range = Math.random() * Math.PI * 2;    for (var i = 0; i < this.numPoints; i++) {      const radian = (i / (this.numPoints - 1)) * Math.PI * 2;      this.delayPointsArray[i] = (Math.sin(radian + range) + 1) / 2 * this.delayPointsMax;    }    if (this.isOpened === false) {      this.open();    } else {      this.close();    }  }  open() {    this.isOpened = true;    this.elm.classList.add('is-opened');    this.timeStart = Date.now();    this.renderLoop();  }  close() {    this.isOpened = false;    this.elm.classList.remove('is-opened');    this.timeStart = Date.now();    this.renderLoop();  }  updatePath(time) {    const points = [];    for (var i = 0; i < this.numPoints; i++) {      points[i] = ease.cubicInOut(Math.min(Math.max(time - this.delayPointsArray[i], 0) / this.duration, 1)) * 100    }    let str = '';    str += (this.isOpened) ? `M 0 0 V ${points[0]} ` : `M 0 ${points[0]} `;    for (var i = 0; i < this.numPoints - 1; i++) {      const p = (i + 1) / (this.numPoints - 1) * 100;      const cp = p - (1 / (this.numPoints - 1) * 100) / 2;      str += `C ${cp} ${points[i]} ${cp} ${points[i + 1]} ${p} ${points[i + 1]} `;    }    str += (this.isOpened) ? `V 0 H 0` : `V 100 H 0`;    return str;  }  render() {    if (this.isOpened) {      for (var i = 0; i < this.path.length; i++) {        this.path[i].setAttribute('d', this.updatePath(Date.now() - (this.timeStart + this.delayPerPath * i)));      }    } else {      for (var i = 0; i < this.path.length; i++) {        this.path[i].setAttribute('d', this.updatePath(Date.now() - (this.timeStart + this.delayPerPath * (this.path.length - i - 1))));      }    }  }  renderLoop() {    this.render();    if (Date.now() - this.timeStart < this.duration + this.delayPerPath * (this.path.length - 1) + this.delayPointsMax) {      requestAnimationFrame(() => {        this.renderLoop();      });    }    else {      this.isAnimating = false;    }  }}(function() {  const elmHamburger = document.querySelector('.hamburger');  const gNavItems = document.querySelectorAll('.global-menu__item');  const elmOverlay = document.querySelector('.shape-overlays');  const overlay = new ShapeOverlays(elmOverlay);  elmHamburger.addEventListener('click', () => {    if (overlay.isAnimating) {      return false;    }    overlay.toggle();    if (overlay.isOpened === true) {      elmHamburger.classList.add('is-opened-navi');      for (var i = 0; i < gNavItems.length; i++) {        gNavItems[i].classList.add('is-opened');      }    } else {      elmHamburger.classList.remove('is-opened-navi');      for (var i = 0; i < gNavItems.length; i++) {        gNavItems[i].classList.remove('is-opened');      }    }  });}());]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/relax/js/demo1.js"/>
      <url>/relax/js/demo1.js</url>
      
        <content type="html"><![CDATA[class ShapeOverlays {  constructor(elm) {    this.elm = elm;    this.path = elm.querySelectorAll('path');    this.numPoints = 18;    this.duration = 600;    this.delayPointsArray = [];    this.delayPointsMax = 300;    this.delayPerPath = 100;    this.timeStart = Date.now();    this.isOpened = false;    this.isAnimating = false;  }  toggle() {    this.isAnimating = true;    const range = 4 * Math.random() + 6;    for (var i = 0; i < this.numPoints; i++) {      const radian = i / (this.numPoints - 1) * Math.PI;      this.delayPointsArray[i] = (Math.sin(-radian) + Math.sin(-radian * range) + 2) / 4 * this.delayPointsMax;    }    if (this.isOpened === false) {      this.open();    } else {      this.close();    }  }  open() {    this.isOpened = true;    this.elm.classList.add('is-opened');    this.timeStart = Date.now();    this.renderLoop();  }  close() {    this.isOpened = false;    this.elm.classList.remove('is-opened');    this.timeStart = Date.now();    this.renderLoop();  }  updatePath(time) {    const points = [];    for (var i = 0; i < this.numPoints + 1; i++) {      points[i] = ease.cubicInOut(Math.min(Math.max(time - this.delayPointsArray[i], 0) / this.duration, 1)) * 100    }    let str = '';    str += (this.isOpened) ? `M 0 0 V ${points[0]} ` : `M 0 ${points[0]} `;    for (var i = 0; i < this.numPoints - 1; i++) {      const p = (i + 1) / (this.numPoints - 1) * 100;      const cp = p - (1 / (this.numPoints - 1) * 100) / 2;      str += `C ${cp} ${points[i]} ${cp} ${points[i + 1]} ${p} ${points[i + 1]} `;    }    str += (this.isOpened) ? `V 0 H 0` : `V 100 H 0`;    return str;  }  render() {    if (this.isOpened) {      for (var i = 0; i < this.path.length; i++) {        this.path[i].setAttribute('d', this.updatePath(Date.now() - (this.timeStart + this.delayPerPath * i)));      }    } else {      for (var i = 0; i < this.path.length; i++) {        this.path[i].setAttribute('d', this.updatePath(Date.now() - (this.timeStart + this.delayPerPath * (this.path.length - i - 1))));      }    }  }  renderLoop() {    this.render();    if (Date.now() - this.timeStart < this.duration + this.delayPerPath * (this.path.length - 1) + this.delayPointsMax) {      requestAnimationFrame(() => {        this.renderLoop();      });    }    else {      this.isAnimating = false;    }  }}(function() {  const elmHamburger = document.querySelector('.hamburger');  const gNavItems = document.querySelectorAll('.global-menu__item');  const elmOverlay = document.querySelector('.shape-overlays');  const overlay = new ShapeOverlays(elmOverlay);  elmHamburger.addEventListener('click', () => {    if (overlay.isAnimating) {      return false;    }    overlay.toggle();    if (overlay.isOpened === true) {      elmHamburger.classList.add('is-opened-navi');      for (var i = 0; i < gNavItems.length; i++) {        gNavItems[i].classList.add('is-opened');      }    } else {      elmHamburger.classList.remove('is-opened-navi');      for (var i = 0; i < gNavItems.length; i++) {        gNavItems[i].classList.remove('is-opened');      }    }  });}());]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/relax/js/demo.js"/>
      <url>/relax/js/demo.js</url>
      
        <content type="html"><![CDATA[/** * demo.js * http://www.codrops.com * * Licensed under the MIT license. * http://www.opensource.org/licenses/mit-license.php *  * Copyright 2017, Codrops * http://www.codrops.com */{setTimeout(() => document.body.classList.add('render'), 60);const navdemos = Array.from(document.querySelectorAll('nav.demos > .demo'));const total = navdemos.length;const current = navdemos.findIndex(el => el.classList.contains('demo--current'));const navigate = (linkEl) => {document.body.classList.remove('render');document.body.addEventListener('transitionend', () => window.location = linkEl.href);};navdemos.forEach(link => link.addEventListener('click', (ev) => {ev.preventDefault();navigate(ev.target);}));document.addEventListener('keydown', (ev) => {const keyCode = ev.keyCode || ev.which;let linkEl;if ( keyCode === 37 ) {linkEl = current > 0 ? navdemos[current-1] : navdemos[total-1];}else if ( keyCode === 39 ) {linkEl = current < total-1 ? navdemos[current+1] : navdemos[0];}else {return false;}navigate(linkEl);});}]]></content>
      
    </entry>
    
    
    
    <entry>
      <title></title>
      <link href="/relax/js/easings.js"/>
      <url>/relax/js/easings.js</url>
      
        <content type="html"><![CDATA[//// these easing functions are based on the code of glsl-easing module.// https://github.com/glslify/glsl-easings//const ease = {  exponentialIn: (t) => {    return t == 0.0 ? t : Math.pow(2.0, 10.0 * (t - 1.0));  },  exponentialOut: (t) => {    return t == 1.0 ? t : 1.0 - Math.pow(2.0, -10.0 * t);  },  exponentialInOut: (t) => {    return t == 0.0 || t == 1.0      ? t      : t < 0.5        ? +0.5 * Math.pow(2.0, (20.0 * t) - 10.0)        : -0.5 * Math.pow(2.0, 10.0 - (t * 20.0)) + 1.0;  },  sineOut: (t) => {    const HALF_PI = 1.5707963267948966;    return Math.sin(t * HALF_PI);  },  circularInOut: (t) => {    return t < 0.5        ? 0.5 * (1.0 - Math.sqrt(1.0 - 4.0 * t * t))        : 0.5 * (Math.sqrt((3.0 - 2.0 * t) * (2.0 * t - 1.0)) + 1.0);  },  cubicIn: (t) => {    return t * t * t;  },  cubicOut: (t) => {    const f = t - 1.0;    return f * f * f + 1.0;  },  cubicInOut: (t) => {    return t < 0.5      ? 4.0 * t * t * t      : 0.5 * Math.pow(2.0 * t - 2.0, 3.0) + 1.0;  },  quadraticOut: (t) => {    return -t * (t - 2.0);  },  quarticOut: (t) => {    return Math.pow(t - 1.0, 3.0) * (1.0 - t) + 1.0;  },}]]></content>
      
    </entry>
    
    
  
</search>
